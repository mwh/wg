import * as ast from "./ast.js";

function cons(head, tail) {
    return [head, ...tail];
}
function one(head) {
    return [head];
}
const nil = [];

function objectConstructor(body) {
    return new ast.ObjectConstructor(body);
}

function methodDecl(parts, returnType, annotations, body) {
    return new ast.MethodDecl(parts, returnType, annotations, body);
}

function declarationPart(name, params) {
    return new ast.DeclarationPart(name, params);
}

function identifierDeclaration(name, type) {
    return new ast.IdentifierDeclaration(name, type);
}

function lexicalRequest(parts) {
    return new ast.LexicalRequest(parts);
}

function requestPart(name, args) {
    return new ast.RequestPart(name, args);
}

function explicitRequest(receiver, parts) {
    return new ast.ExplicitRequest(receiver, parts);
}

function defDecl(name, type, annotations, value) {
    return new ast.DefDecl(name, type, annotations, value);
}

function varDecl(name, type, annotations, value) {
    return new ast.VarDecl(name, type, annotations, value);
}

function numberNode(value) {
    return new ast.NumberNode(value);
}

function stringNode(value) {
    return new ast.StringNode(value);
}

function block(params, body) {
    return new ast.Block(params, body);
}

function comment(value) {
    return new ast.Comment(value);
}

function assign(lhs, rhs) {
    return new ast.Assign(lhs, rhs);
}

function returnStmt(value) {
    return new ast.ReturnStmt(value);
}

export function evaluate(code) {
    return eval(code)
}

export let program2 = objectConstructor(cons(
    methodDecl(cons(declarationPart("succ",
        cons(identifierDeclaration("x", cons(lexicalRequest(cons(requestPart("Number", nil), nil)), nil)), nil)), nil),
        cons(lexicalRequest(cons(requestPart("Number", nil), nil)), nil), 
        cons("public", nil),
        cons(explicitRequest(lexicalRequest(cons(requestPart("x", nil), nil)), cons(requestPart("+", cons(numberNode(1), nil)), nil)), nil)),
    cons(defDecl("a", nil, nil, numberNode(1)),
    cons(stringNode("abc"),
    cons(varDecl("b", nil, nil, cons(lexicalRequest(cons(requestPart("succ", cons(lexicalRequest(cons(requestPart("a", nil), nil)), nil)), nil)), nil)),
    cons(explicitRequest(block(nil,
        cons(lexicalRequest(cons(requestPart("print", cons(lexicalRequest(cons(requestPart("b", nil), nil)), nil)), nil)), nil)),
        cons(requestPart("apply", nil), nil)), nil))))))


export default program = objectConstructor(cons(methodDecl(one(declarationPart("EOFToken", one(identifierDeclaration("index", nil)))), nil, nil, one(lexicalRequest(one(requestPart("SymbolToken", cons(lexicalRequest(one(requestPart("index", nil))), one(stringNode("EOF")))))))), cons(methodDecl(one(declarationPart("NumberToken", cons(identifierDeclaration("index", nil), one(identifierDeclaration("val", nil))))), nil, nil, one(objectConstructor(cons(defDecl("nature", nil, one("public"), stringNode("NUMBER")), cons(defDecl("value", nil, one("public"), lexicalRequest(one(requestPart("val", nil)))), cons(defDecl("position", nil, one("public"), lexicalRequest(one(requestPart("index", nil)))), one(methodDecl(one(declarationPart("asString", nil)), nil, nil, one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("nature", nil))), one(requestPart("++", one(stringNode("("))))), one(requestPart("++", one(lexicalRequest(one(requestPart("value", nil))))))), one(requestPart("++", one(stringNode(")["))))), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("position", nil))), one(requestPart("asString", nil))))))), one(requestPart("++", one(stringNode("]")))))))))))))), cons(methodDecl(one(declarationPart("LParenToken", one(identifierDeclaration("index", nil)))), nil, nil, one(lexicalRequest(one(requestPart("SymbolToken", cons(lexicalRequest(one(requestPart("index", nil))), one(stringNode("LPAREN")))))))), cons(methodDecl(one(declarationPart("RParenToken", one(identifierDeclaration("index", nil)))), nil, nil, one(lexicalRequest(one(requestPart("SymbolToken", cons(lexicalRequest(one(requestPart("index", nil))), one(stringNode("RPAREN")))))))), cons(methodDecl(one(declarationPart("LBraceToken", one(identifierDeclaration("index", nil)))), nil, nil, one(lexicalRequest(one(requestPart("SymbolToken", cons(lexicalRequest(one(requestPart("index", nil))), one(stringNode("LBRACE")))))))), cons(methodDecl(one(declarationPart("RBraceToken", one(identifierDeclaration("index", nil)))), nil, nil, one(lexicalRequest(one(requestPart("SymbolToken", cons(lexicalRequest(one(requestPart("index", nil))), one(stringNode("RBRACE")))))))), cons(methodDecl(one(declarationPart("CommaToken", one(identifierDeclaration("index", nil)))), nil, nil, one(lexicalRequest(one(requestPart("SymbolToken", cons(lexicalRequest(one(requestPart("index", nil))), one(stringNode("COMMA")))))))), cons(methodDecl(one(declarationPart("DotToken", one(identifierDeclaration("index", nil)))), nil, nil, one(lexicalRequest(one(requestPart("SymbolToken", cons(lexicalRequest(one(requestPart("index", nil))), one(stringNode("DOT")))))))), cons(methodDecl(one(declarationPart("IdentifierToken", cons(identifierDeclaration("index", nil), one(identifierDeclaration("val", nil))))), nil, nil, one(objectConstructor(cons(defDecl("nature", nil, one("public"), stringNode("IDENTIFIER")), cons(defDecl("value", nil, one("public"), lexicalRequest(one(requestPart("val", nil)))), cons(defDecl("position", nil, one("public"), lexicalRequest(one(requestPart("index", nil)))), one(methodDecl(one(declarationPart("asString", nil)), nil, nil, one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("nature", nil))), one(requestPart("++", one(stringNode("("))))), one(requestPart("++", one(lexicalRequest(one(requestPart("value", nil))))))), one(requestPart("++", one(stringNode(")["))))), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("position", nil))), one(requestPart("asString", nil))))))), one(requestPart("++", one(stringNode("]")))))))))))))), cons(methodDecl(one(declarationPart("KeywordToken", cons(identifierDeclaration("index", nil), one(identifierDeclaration("val", nil))))), nil, nil, one(objectConstructor(cons(defDecl("nature", nil, one("public"), stringNode("KEYWORD")), cons(defDecl("value", nil, one("public"), lexicalRequest(one(requestPart("val", nil)))), cons(defDecl("position", nil, one("public"), lexicalRequest(one(requestPart("index", nil)))), one(methodDecl(one(declarationPart("asString", nil)), nil, nil, one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("nature", nil))), one(requestPart("++", one(stringNode("("))))), one(requestPart("++", one(lexicalRequest(one(requestPart("value", nil))))))), one(requestPart("++", one(stringNode(")"))))), one(requestPart("++", one(stringNode("["))))), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("position", nil))), one(requestPart("asString", nil))))))), one(requestPart("++", one(stringNode("]")))))))))))))), cons(methodDecl(one(declarationPart("OperatorToken", cons(identifierDeclaration("index", nil), one(identifierDeclaration("val", nil))))), nil, nil, one(objectConstructor(cons(defDecl("nature", nil, one("public"), stringNode("OPERATOR")), cons(defDecl("value", nil, one("public"), lexicalRequest(one(requestPart("val", nil)))), cons(defDecl("position", nil, one("public"), lexicalRequest(one(requestPart("index", nil)))), one(methodDecl(one(declarationPart("asString", nil)), nil, nil, one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("nature", nil))), one(requestPart("++", one(stringNode("("))))), one(requestPart("++", one(lexicalRequest(one(requestPart("value", nil))))))), one(requestPart("++", one(stringNode(")"))))), one(requestPart("++", one(stringNode("["))))), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("position", nil))), one(requestPart("asString", nil))))))), one(requestPart("++", one(stringNode("]")))))))))))))), cons(methodDecl(one(declarationPart("StringToken", cons(identifierDeclaration("index", nil), one(identifierDeclaration("val", nil))))), nil, nil, one(objectConstructor(cons(defDecl("nature", nil, one("public"), stringNode("STRING")), cons(defDecl("value", nil, one("public"), lexicalRequest(one(requestPart("val", nil)))), cons(defDecl("position", nil, one("public"), lexicalRequest(one(requestPart("index", nil)))), one(methodDecl(one(declarationPart("asString", nil)), nil, nil, one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("nature", nil))), one(requestPart("++", one(stringNode("("))))), one(requestPart("++", one(lexicalRequest(one(requestPart("value", nil))))))), one(requestPart("++", one(stringNode(")"))))), one(requestPart("++", one(stringNode("["))))), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("position", nil))), one(requestPart("asString", nil))))))), one(requestPart("++", one(stringNode("]")))))))))))))), cons(methodDecl(one(declarationPart("EqualsToken", one(identifierDeclaration("index", nil)))), nil, nil, one(lexicalRequest(one(requestPart("SymbolToken", cons(lexicalRequest(one(requestPart("index", nil))), one(stringNode("EQUALS")))))))), cons(methodDecl(one(declarationPart("AssignToken", one(identifierDeclaration("index", nil)))), nil, nil, one(lexicalRequest(one(requestPart("SymbolToken", cons(lexicalRequest(one(requestPart("index", nil))), one(stringNode("ASSIGN")))))))), cons(methodDecl(one(declarationPart("ArrowToken", one(identifierDeclaration("index", nil)))), nil, nil, one(lexicalRequest(one(requestPart("SymbolToken", cons(lexicalRequest(one(requestPart("index", nil))), one(stringNode("ARROW")))))))), cons(methodDecl(one(declarationPart("SymbolToken", cons(identifierDeclaration("index", nil), one(identifierDeclaration("nat", nil))))), nil, nil, one(objectConstructor(cons(defDecl("nature", nil, one("public"), lexicalRequest(one(requestPart("nat", nil)))), cons(defDecl("position", nil, one("public"), lexicalRequest(one(requestPart("index", nil)))), one(methodDecl(one(declarationPart("asString", nil)), nil, nil, one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("nature", nil))), one(requestPart("++", one(stringNode("["))))), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("position", nil))), one(requestPart("asString", nil))))))), one(requestPart("++", one(stringNode("]"))))))))))))), cons(methodDecl(one(declarationPart("NewlineToken", one(identifierDeclaration("index", nil)))), nil, nil, one(lexicalRequest(one(requestPart("SymbolToken", cons(lexicalRequest(one(requestPart("index", nil))), one(stringNode("NEWLINE")))))))), cons(methodDecl(one(declarationPart("CommentToken", cons(identifierDeclaration("index", nil), one(identifierDeclaration("text", nil))))), nil, nil, one(objectConstructor(cons(defDecl("nature", nil, one("public"), stringNode("COMMENT")), cons(defDecl("position", nil, one("public"), lexicalRequest(one(requestPart("index", nil)))), cons(defDecl("value", nil, one("public"), lexicalRequest(one(requestPart("text", nil)))), one(methodDecl(one(declarationPart("asString", nil)), nil, nil, one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("nature", nil))), one(requestPart("++", one(stringNode("("))))), one(requestPart("++", one(lexicalRequest(one(requestPart("value", nil))))))), one(requestPart("++", one(stringNode(")["))))), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("position", nil))), one(requestPart("asString", nil))))))), one(requestPart("++", one(stringNode("]")))))))))))))), cons(methodDecl(one(declarationPart("isOperatorCharacter", one(identifierDeclaration("c", nil)))), nil, nil, one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("+"))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("-"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("*"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("/"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("="))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode(":"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("|"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("&"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("!"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode(">"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("<"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("."))))))))))), cons(methodDecl(one(declarationPart("isIdentifierStart", one(identifierDeclaration("c", nil)))), nil, nil, one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("a"))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("b"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("c"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("d"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("e"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("f"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("g"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("h"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("i"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("j"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("k"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("l"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("m"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("n"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("o"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("p"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("q"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("r"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("s"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("t"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("u"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("v"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("w"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("x"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("y"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("z"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("A"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("B"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("C"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("D"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("E"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("F"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("G"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("H"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("I"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("J"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("K"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("L"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("M"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("N"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("O"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("P"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("Q"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("R"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("S"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("T"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("U"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("V"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("W"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("X"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("Y"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("Z"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("_"))))))))))), cons(methodDecl(one(declarationPart("isDigit", one(identifierDeclaration("c", nil)))), nil, nil, one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("1"))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("2"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("3"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("4"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("5"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("6"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("7"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("8"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("9"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("0"))))))))))), cons(methodDecl(one(declarationPart("lexer", one(identifierDeclaration("code", nil)))), nil, nil, one(objectConstructor(cons(defDecl("source", nil, nil, lexicalRequest(one(requestPart("code", nil)))), cons(varDecl("index", nil, nil, one(numberNode(1))), cons(varDecl("line", nil, nil, one(numberNode(1))), cons(varDecl("column", nil, nil, one(numberNode(0))), cons(varDecl("lineStart", nil, nil, one(numberNode(0))), cons(varDecl("currentToken", nil, nil, one(lexicalRequest(one(requestPart("nextToken", nil))))), cons(methodDecl(one(declarationPart("nextToken", nil)), nil, nil, cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart(">", one(explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("size", nil))))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("EOFToken", one(lexicalRequest(one(requestPart("index", nil))))))))))))))), cons(varDecl("c", nil, nil, one(explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("at", one(lexicalRequest(one(requestPart("index", nil))))))))), cons(assign(lexicalRequest(one(requestPart("column", nil))), explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("-", one(lexicalRequest(one(requestPart("lineStart", nil)))))))), cons(assign(lexicalRequest(one(requestPart("index", nil))), explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("+", one(numberNode(1)))))), cons(defDecl("location", nil, nil, explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("line", nil))), one(requestPart("asString", nil))), one(requestPart("++", one(stringNode(":"))))), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("column", nil))), one(requestPart("asString", nil)))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode(" "))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("nextToken", nil))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("("))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("LParenToken", one(lexicalRequest(one(requestPart("location", nil))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode(")"))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("RParenToken", one(lexicalRequest(one(requestPart("location", nil))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart(">", one(stringNode("z"))))), one(requestPart("&&", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("<", one(stringNode("|"))))))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("LBraceToken", one(lexicalRequest(one(requestPart("location", nil))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("}"))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("RBraceToken", one(lexicalRequest(one(requestPart("location", nil))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode(","))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("CommaToken", one(lexicalRequest(one(requestPart("location", nil))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(lexicalRequest(one(requestPart("isOperatorCharacter", one(lexicalRequest(one(requestPart("c", nil))))))))), one(requestPart("then", one(block(nil, cons(defDecl("startIndex", nil, nil, lexicalRequest(one(requestPart("index", nil)))), cons(varDecl("op", nil, nil, one(lexicalRequest(one(requestPart("c", nil))))), cons(assign(lexicalRequest(one(requestPart("c", nil))), explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("at", one(lexicalRequest(one(requestPart("index", nil)))))))), cons(assign(lexicalRequest(one(requestPart("index", nil))), explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("+", one(numberNode(1)))))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(lexicalRequest(one(requestPart("isOperatorCharacter", one(lexicalRequest(one(requestPart("c", nil))))))), one(requestPart("&&", one(explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("<=", one(explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("size", nil))))))))))))))), one(requestPart("do", one(block(nil, cons(assign(lexicalRequest(one(requestPart("op", nil))), explicitRequest(lexicalRequest(one(requestPart("op", nil))), one(requestPart("++", one(lexicalRequest(one(requestPart("c", nil)))))))), cons(assign(lexicalRequest(one(requestPart("c", nil))), explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("at", one(lexicalRequest(one(requestPart("index", nil)))))))), one(assign(lexicalRequest(one(requestPart("index", nil))), explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("+", one(numberNode(1))))))))))))))), cons(assign(lexicalRequest(one(requestPart("index", nil))), explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("-", one(numberNode(1)))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("op", nil))), one(requestPart("==", one(stringNode(":="))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("AssignToken", one(lexicalRequest(one(requestPart("location", nil))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("op", nil))), one(requestPart("==", one(stringNode("="))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("EqualsToken", one(lexicalRequest(one(requestPart("location", nil))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("op", nil))), one(requestPart("==", one(stringNode("->"))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("ArrowToken", one(lexicalRequest(one(requestPart("location", nil))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("op", nil))), one(requestPart("==", one(stringNode("."))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("DotToken", one(lexicalRequest(one(requestPart("location", nil))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("op", nil))), one(requestPart("==", one(stringNode(":"))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("SymbolToken", cons(lexicalRequest(one(requestPart("location", nil))), one(stringNode("COLON")))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("op", nil))), one(requestPart("==", one(stringNode("//"))))))), one(requestPart("then", one(block(nil, cons(varDecl("cp", nil, nil, one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("firstCodepoint", nil))))), cons(varDecl("text", nil, nil, one(stringNode(""))), cons(assign(lexicalRequest(one(requestPart("index", nil))), explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("+", one(numberNode(1)))))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("cp", nil))), one(requestPart("!=", one(numberNode(10))))), one(requestPart("&&", one(explicitRequest(lexicalRequest(one(requestPart("cp", nil))), one(requestPart("!=", one(numberNode(13))))))))), one(requestPart("&&", one(explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("<=", one(explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("size", nil))))))))))))))), one(requestPart("do", one(block(nil, cons(assign(lexicalRequest(one(requestPart("text", nil))), explicitRequest(lexicalRequest(one(requestPart("text", nil))), one(requestPart("++", one(lexicalRequest(one(requestPart("c", nil)))))))), cons(assign(lexicalRequest(one(requestPart("c", nil))), explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("at", one(lexicalRequest(one(requestPart("index", nil)))))))), cons(assign(lexicalRequest(one(requestPart("cp", nil))), explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("firstCodepoint", nil)))), one(assign(lexicalRequest(one(requestPart("index", nil))), explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("+", one(numberNode(1)))))))))))))))), one(returnStmt(lexicalRequest(one(requestPart("CommentToken", cons(lexicalRequest(one(requestPart("location", nil))), one(lexicalRequest(one(requestPart("text", nil)))))))))))))))))))), one(returnStmt(lexicalRequest(one(requestPart("OperatorToken", cons(lexicalRequest(one(requestPart("location", nil))), one(lexicalRequest(one(requestPart("op", nil)))))))))))))))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("firstCodepoint", nil))), one(requestPart("==", one(numberNode(13))))))), one(requestPart("then", one(block(nil, cons(assign(lexicalRequest(one(requestPart("c", nil))), explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("at", one(lexicalRequest(one(requestPart("index", nil)))))))), one(assign(lexicalRequest(one(requestPart("index", nil))), explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("+", one(numberNode(1)))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("firstCodepoint", nil))), one(requestPart("==", one(numberNode(10))))), one(requestPart("||", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("firstCodepoint", nil))), one(requestPart("==", one(numberNode(8232))))))))))), one(requestPart("then", one(block(nil, cons(assign(lexicalRequest(one(requestPart("line", nil))), explicitRequest(lexicalRequest(one(requestPart("line", nil))), one(requestPart("+", one(numberNode(1)))))), cons(assign(lexicalRequest(one(requestPart("lineStart", nil))), explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("-", one(numberNode(1)))))), one(returnStmt(lexicalRequest(one(requestPart("NewlineToken", one(lexicalRequest(one(requestPart("location", nil))))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("firstCodepoint", nil))), one(requestPart("==", one(numberNode(34))))))), one(requestPart("then", one(block(nil, cons(varDecl("value", nil, nil, one(stringNode(""))), cons(varDecl("escaped", nil, nil, one(lexicalRequest(one(requestPart("false", nil))))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("at", one(lexicalRequest(one(requestPart("index", nil))))))), one(requestPart("firstCodepoint", nil))), one(requestPart("!=", one(numberNode(34))))), one(requestPart("||", one(lexicalRequest(one(requestPart("escaped", nil))))))))))), one(requestPart("do", one(block(nil, cons(varDecl("escapeNext", nil, nil, one(lexicalRequest(one(requestPart("false", nil))))), cons(defDecl("cp", nil, nil, explicitRequest(explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("at", one(lexicalRequest(one(requestPart("index", nil))))))), one(requestPart("firstCodepoint", nil)))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("cp", nil))), one(requestPart("==", one(numberNode(92))))), one(requestPart("&&", one(explicitRequest(lexicalRequest(one(requestPart("escaped", nil))), one(requestPart("==", one(lexicalRequest(one(requestPart("false", nil))))))))))))), cons(requestPart("then", one(block(nil, one(assign(lexicalRequest(one(requestPart("escapeNext", nil))), lexicalRequest(one(requestPart("true", nil)))))))), cons(requestPart("elseif", one(block(nil, one(explicitRequest(lexicalRequest(one(requestPart("escaped", nil))), one(requestPart("&&", one(explicitRequest(lexicalRequest(one(requestPart("cp", nil))), one(requestPart("==", one(numberNode(110))))))))))))), cons(requestPart("then", one(block(nil, one(assign(lexicalRequest(one(requestPart("value", nil))), explicitRequest(lexicalRequest(one(requestPart("value", nil))), one(requestPart("++", one(stringNode("\n")))))))))), cons(requestPart("elseif", one(block(nil, one(explicitRequest(lexicalRequest(one(requestPart("escaped", nil))), one(requestPart("&&", one(explicitRequest(lexicalRequest(one(requestPart("cp", nil))), one(requestPart("==", one(numberNode(114))))))))))))), cons(requestPart("then", one(block(nil, one(assign(lexicalRequest(one(requestPart("value", nil))), explicitRequest(lexicalRequest(one(requestPart("value", nil))), one(requestPart("++", one(stringNode("\r")))))))))), one(requestPart("else", one(block(nil, one(assign(lexicalRequest(one(requestPart("value", nil))), explicitRequest(lexicalRequest(one(requestPart("value", nil))), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("at", one(lexicalRequest(one(requestPart("index", nil)))))))))))))))))))))))), cons(assign(lexicalRequest(one(requestPart("escaped", nil))), lexicalRequest(one(requestPart("escapeNext", nil)))), one(assign(lexicalRequest(one(requestPart("index", nil))), explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("+", one(numberNode(1))))))))))))))))), cons(assign(lexicalRequest(one(requestPart("index", nil))), explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("+", one(numberNode(1)))))), one(returnStmt(lexicalRequest(one(requestPart("StringToken", cons(lexicalRequest(one(requestPart("location", nil))), one(lexicalRequest(one(requestPart("value", nil)))))))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(lexicalRequest(one(requestPart("isDigit", one(lexicalRequest(one(requestPart("c", nil))))))))), one(requestPart("then", one(block(nil, cons(defDecl("startIndex", nil, nil, explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("-", one(numberNode(1)))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart(">=", one(explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("size", nil))))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("NumberToken", cons(lexicalRequest(one(requestPart("location", nil))), one(lexicalRequest(one(requestPart("c", nil)))))))))))))))), cons(varDecl("value", nil, nil, one(stringNode(""))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(lexicalRequest(one(requestPart("isDigit", one(lexicalRequest(one(requestPart("c", nil))))))), one(requestPart("&&", one(explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("<=", one(explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("size", nil))))))))))))))), one(requestPart("do", one(block(nil, cons(assign(lexicalRequest(one(requestPart("value", nil))), explicitRequest(lexicalRequest(one(requestPart("value", nil))), one(requestPart("++", one(lexicalRequest(one(requestPart("c", nil)))))))), cons(assign(lexicalRequest(one(requestPart("c", nil))), explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("at", one(lexicalRequest(one(requestPart("index", nil)))))))), one(assign(lexicalRequest(one(requestPart("index", nil))), explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("+", one(numberNode(1))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart(">", one(explicitRequest(lexicalRequest(one(requestPart("startIndex", nil))), one(requestPart("+", one(numberNode(1))))))))))), one(requestPart("then", one(block(nil, one(assign(lexicalRequest(one(requestPart("index", nil))), explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("-", one(numberNode(1))))))))))))), one(returnStmt(lexicalRequest(one(requestPart("NumberToken", cons(lexicalRequest(one(requestPart("location", nil))), one(lexicalRequest(one(requestPart("value", nil))))))))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(lexicalRequest(one(requestPart("isIdentifierStart", one(lexicalRequest(one(requestPart("c", nil))))))))), one(requestPart("then", one(block(nil, cons(defDecl("startIndex", nil, nil, explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("-", one(numberNode(1)))))), cons(varDecl("value", nil, nil, one(lexicalRequest(one(requestPart("c", nil))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart(">", one(explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("size", nil))))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("IdentifierToken", cons(lexicalRequest(one(requestPart("location", nil))), one(lexicalRequest(one(requestPart("value", nil)))))))))))))))), cons(assign(lexicalRequest(one(requestPart("c", nil))), explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("at", one(lexicalRequest(one(requestPart("index", nil)))))))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("isIdentifierStart", one(lexicalRequest(one(requestPart("c", nil))))))), one(requestPart("||", one(lexicalRequest(one(requestPart("isDigit", one(lexicalRequest(one(requestPart("c", nil))))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("'"))))))))), one(requestPart("&&", one(explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("<=", one(explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("size", nil))))))))))))))), one(requestPart("do", one(block(nil, cons(assign(lexicalRequest(one(requestPart("value", nil))), explicitRequest(lexicalRequest(one(requestPart("value", nil))), one(requestPart("++", one(lexicalRequest(one(requestPart("c", nil)))))))), cons(assign(lexicalRequest(one(requestPart("index", nil))), explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("+", one(numberNode(1)))))), one(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("<=", one(explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("size", nil))))))))), one(requestPart("then", one(block(nil, one(assign(lexicalRequest(one(requestPart("c", nil))), explicitRequest(lexicalRequest(one(requestPart("source", nil))), one(requestPart("at", one(lexicalRequest(one(requestPart("index", nil)))))))))))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("value", nil))), one(requestPart("==", one(stringNode("var"))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("value", nil))), one(requestPart("==", one(stringNode("def"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("value", nil))), one(requestPart("==", one(stringNode("method"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("value", nil))), one(requestPart("==", one(stringNode("object"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("value", nil))), one(requestPart("==", one(stringNode("is"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("value", nil))), one(requestPart("==", one(stringNode("return"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("value", nil))), one(requestPart("==", one(stringNode("class"))))))))), one(requestPart("||", one(explicitRequest(lexicalRequest(one(requestPart("value", nil))), one(requestPart("==", one(stringNode("type"))))))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("KeywordToken", cons(lexicalRequest(one(requestPart("location", nil))), one(lexicalRequest(one(requestPart("value", nil)))))))))))))))), one(returnStmt(lexicalRequest(one(requestPart("IdentifierToken", cons(lexicalRequest(one(requestPart("location", nil))), one(lexicalRequest(one(requestPart("value", nil)))))))))))))))))))))), one(lexicalRequest(one(requestPart("print", one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(stringNode("Unknown character: "), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("asString", nil))))))), one(requestPart("++", one(stringNode("("))))), one(requestPart("++", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("firstCodepoint", nil))), one(requestPart("asString", nil))))))), one(requestPart("++", one(stringNode(") at index "))))), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("asString", nil)))))))))))))))))))))))))))))), cons(methodDecl(one(declarationPart("current", nil)), nil, nil, one(lexicalRequest(one(requestPart("currentToken", nil))))), cons(methodDecl(one(declarationPart("advance", nil)), nil, nil, one(assign(lexicalRequest(one(requestPart("currentToken", nil))), lexicalRequest(one(requestPart("nextToken", nil)))))), cons(methodDecl(one(declarationPart("expectToken", one(identifierDeclaration("nature", nil)))), nil, nil, one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("nature", nil))), one(requestPart("!=", one(lexicalRequest(one(requestPart("nature", nil))))))))), one(requestPart("then", one(block(nil, cons(lexicalRequest(one(requestPart("print", one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(stringNode("Expected "), one(requestPart("++", one(lexicalRequest(one(requestPart("nature", nil))))))), one(requestPart("++", one(stringNode(" but got "))))), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("nature", nil))))))), one(requestPart("++", one(stringNode(" at "))))), one(requestPart("++", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("position", nil))), one(requestPart("asString", nil))))))))))), one(explicitRequest(lexicalRequest(one(requestPart("Exception", nil))), one(requestPart("raise", one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(stringNode("Expected "), one(requestPart("++", one(lexicalRequest(one(requestPart("nature", nil))))))), one(requestPart("++", one(stringNode(" but got "))))), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("nature", nil))))))), one(requestPart("++", one(stringNode(" at "))))), one(requestPart("++", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("position", nil))), one(requestPart("asString", nil))))))))))))))))))))), cons(methodDecl(one(declarationPart("expectSymbol", one(identifierDeclaration("nature", nil)))), nil, nil, one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("nature", nil))), one(requestPart("!=", one(lexicalRequest(one(requestPart("nature", nil))))))))), one(requestPart("then", one(block(nil, cons(lexicalRequest(one(requestPart("print", one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(stringNode("Expected "), one(requestPart("++", one(lexicalRequest(one(requestPart("nature", nil))))))), one(requestPart("++", one(stringNode(" but got "))))), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("nature", nil))))))), one(requestPart("++", one(stringNode(" at "))))), one(requestPart("++", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("position", nil))), one(requestPart("asString", nil))))))))))), one(explicitRequest(lexicalRequest(one(requestPart("Exception", nil))), one(requestPart("raise", one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(stringNode("Expected "), one(requestPart("++", one(lexicalRequest(one(requestPart("nature", nil))))))), one(requestPart("++", one(stringNode(" but got "))))), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("nature", nil))))))), one(requestPart("++", one(stringNode(" at "))))), one(requestPart("++", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("position", nil))), one(requestPart("asString", nil))))))))))))))))))))), one(methodDecl(one(declarationPart("expectKeyword", one(identifierDeclaration("val", nil)))), nil, nil, cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("nature", nil))), one(requestPart("!=", one(stringNode("KEYWORD"))))))), one(requestPart("then", one(block(nil, cons(lexicalRequest(one(requestPart("print", one(explicitRequest(explicitRequest(explicitRequest(stringNode("Expected KEYWORD but got "), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("nature", nil))))))), one(requestPart("++", one(stringNode(" at "))))), one(requestPart("++", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("position", nil))), one(requestPart("asString", nil))))))))))), one(explicitRequest(lexicalRequest(one(requestPart("Exception", nil))), one(requestPart("raise", one(explicitRequest(explicitRequest(explicitRequest(stringNode("Expected KEYWORD but got "), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("nature", nil))))))), one(requestPart("++", one(stringNode(" at "))))), one(requestPart("++", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("position", nil))), one(requestPart("asString", nil))))))))))))))))))), one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("value", nil))), one(requestPart("!=", one(lexicalRequest(one(requestPart("val", nil))))))))), one(requestPart("then", one(block(nil, cons(lexicalRequest(one(requestPart("print", one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(stringNode("Expected "), one(requestPart("++", one(lexicalRequest(one(requestPart("val", nil))))))), one(requestPart("++", one(stringNode(" but got "))))), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("value", nil))))))), one(requestPart("++", one(stringNode(" at "))))), one(requestPart("++", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("position", nil))), one(requestPart("asString", nil))))))))))), one(explicitRequest(lexicalRequest(one(requestPart("Exception", nil))), one(requestPart("raise", one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(stringNode("Expected "), one(requestPart("++", one(lexicalRequest(one(requestPart("val", nil))))))), one(requestPart("++", one(stringNode(" but got "))))), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("value", nil))))))), one(requestPart("++", one(stringNode(" at "))))), one(requestPart("++", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("currentToken", nil))), one(requestPart("position", nil))), one(requestPart("asString", nil))))))))))))))))))))))))))))))))))))), cons(methodDecl(one(declarationPart("digitToNumber", one(identifierDeclaration("c", nil)))), nil, nil, cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("1"))))))), one(requestPart("then", one(block(nil, one(returnStmt(numberNode(1))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("2"))))))), one(requestPart("then", one(block(nil, one(returnStmt(numberNode(2))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("3"))))))), one(requestPart("then", one(block(nil, one(returnStmt(numberNode(3))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("4"))))))), one(requestPart("then", one(block(nil, one(returnStmt(numberNode(4))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("5"))))))), one(requestPart("then", one(block(nil, one(returnStmt(numberNode(5))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("6"))))))), one(requestPart("then", one(block(nil, one(returnStmt(numberNode(6))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("7"))))))), one(requestPart("then", one(block(nil, one(returnStmt(numberNode(7))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("8"))))))), one(requestPart("then", one(block(nil, one(returnStmt(numberNode(8))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("9"))))))), one(requestPart("then", one(block(nil, one(returnStmt(numberNode(9))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("==", one(stringNode("0"))))))), one(requestPart("then", one(block(nil, one(returnStmt(numberNode(0))))))))), cons(lexicalRequest(one(requestPart("print", one(explicitRequest(stringNode("Unexpected digit: "), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("asString", nil))))))))))), one(explicitRequest(lexicalRequest(one(requestPart("Exception", nil))), one(requestPart("raise", one(explicitRequest(stringNode("Unexpected digit: "), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("c", nil))), one(requestPart("asString", nil)))))))))))))))))))))))), cons(methodDecl(one(declarationPart("escapeString", one(identifierDeclaration("value", nil)))), nil, nil, one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("value", nil))), cons(requestPart("replace", one(stringNode("\\"))), one(requestPart("with", one(stringNode("\\\\")))))), cons(requestPart("replace", one(stringNode("\""))), one(requestPart("with", one(stringNode("\\\"")))))), cons(requestPart("replace", one(stringNode("\n"))), one(requestPart("with", one(stringNode("\\n")))))), cons(requestPart("replace", one(stringNode("\r"))), one(requestPart("with", one(stringNode("\\r")))))))), cons(methodDecl(one(declarationPart("parseNumber", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(defDecl("token", nil, nil, explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil)))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(defDecl("s", nil, nil, explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("value", nil)))), cons(varDecl("val", nil, nil, one(numberNode(0))), cons(varDecl("index", nil, nil, one(numberNode(1))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("<=", one(explicitRequest(lexicalRequest(one(requestPart("s", nil))), one(requestPart("size", nil))))))))))), one(requestPart("do", one(block(nil, cons(assign(lexicalRequest(one(requestPart("val", nil))), explicitRequest(explicitRequest(lexicalRequest(one(requestPart("val", nil))), one(requestPart("*", one(numberNode(10))))), one(requestPart("+", one(lexicalRequest(one(requestPart("digitToNumber", one(explicitRequest(lexicalRequest(one(requestPart("s", nil))), one(requestPart("at", one(lexicalRequest(one(requestPart("index", nil)))))))))))))))), one(assign(lexicalRequest(one(requestPart("index", nil))), explicitRequest(lexicalRequest(one(requestPart("index", nil))), one(requestPart("+", one(numberNode(1)))))))))))))), one(lexicalRequest(one(requestPart("numberNode", one(lexicalRequest(one(requestPart("val", nil))))))))))))))), cons(methodDecl(one(declarationPart("parseString", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(defDecl("token", nil, nil, explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil)))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), one(lexicalRequest(one(requestPart("stringNode", one(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("value", nil))))))))))), cons(methodDecl(one(declarationPart("parseLexicalRequestNoBlock", cons(identifierDeclaration("lxr", nil), one(identifierDeclaration("id", nil))))), nil, nil, cons(defDecl("parts", nil, nil, lexicalRequest(one(requestPart("parseRequestParts", cons(lexicalRequest(one(requestPart("lxr", nil))), one(lexicalRequest(one(requestPart("false", nil))))))))), one(lexicalRequest(one(requestPart("lexicalRequest", one(lexicalRequest(one(requestPart("parts", nil)))))))))), cons(methodDecl(one(declarationPart("parselexicalRequest", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(defDecl("parts", nil, nil, lexicalRequest(one(requestPart("parseRequestParts", cons(lexicalRequest(one(requestPart("lxr", nil))), one(lexicalRequest(one(requestPart("true", nil))))))))), one(lexicalRequest(one(requestPart("lexicalRequest", one(lexicalRequest(one(requestPart("parts", nil)))))))))), cons(methodDecl(one(declarationPart("parseRequestParts", cons(identifierDeclaration("lxr", nil), one(identifierDeclaration("allowBlock", nil))))), nil, nil, cons(varDecl("parts", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("IDENTIFIER"))))))))), one(requestPart("do", one(block(nil, cons(varDecl("id", nil, nil, one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("value", nil))))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("LPAREN"))))))), cons(requestPart("then", one(block(nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(varDecl("args", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("!=", one(stringNode("RPAREN"))))), one(requestPart("&&", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("!=", one(stringNode("EOF"))))))))))))), one(requestPart("do", one(block(nil, cons(assign(lexicalRequest(one(requestPart("args", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("parseExpression", one(lexicalRequest(one(requestPart("lxr", nil))))))), one(lexicalRequest(one(requestPart("args", nil))))))))), one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("COMMA"))))))), one(requestPart("then", one(block(nil, one(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil)))))))))))))))))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(defDecl("part", nil, nil, lexicalRequest(one(requestPart("requestPart", cons(lexicalRequest(one(requestPart("id", nil))), one(explicitRequest(lexicalRequest(one(requestPart("args", nil))), one(requestPart("reversed", one(lexicalRequest(one(requestPart("nil", nil))))))))))))), one(assign(lexicalRequest(one(requestPart("parts", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("part", nil))), one(lexicalRequest(one(requestPart("parts", nil)))))))))))))))))), cons(requestPart("elseif", one(block(nil, one(explicitRequest(lexicalRequest(one(requestPart("allowBlock", nil))), one(requestPart("&&", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("LBRACE"))))))))))))), cons(requestPart("then", one(block(nil, cons(defDecl("blk", nil, nil, lexicalRequest(one(requestPart("parseBlock", one(lexicalRequest(one(requestPart("lxr", nil)))))))), cons(defDecl("part", nil, nil, lexicalRequest(one(requestPart("requestPart", cons(lexicalRequest(one(requestPart("id", nil))), one(lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("blk", nil))), one(lexicalRequest(one(requestPart("nil", nil)))))))))))))), one(assign(lexicalRequest(one(requestPart("parts", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("part", nil))), one(lexicalRequest(one(requestPart("parts", nil))))))))))))))), cons(requestPart("elseif", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("NUMBER"))))))))), cons(requestPart("then", one(block(nil, cons(defDecl("num", nil, nil, lexicalRequest(one(requestPart("parseNumber", one(lexicalRequest(one(requestPart("lxr", nil)))))))), cons(defDecl("part", nil, nil, lexicalRequest(one(requestPart("requestPart", cons(lexicalRequest(one(requestPart("id", nil))), one(lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("num", nil))), one(lexicalRequest(one(requestPart("nil", nil)))))))))))))), one(assign(lexicalRequest(one(requestPart("parts", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("part", nil))), one(lexicalRequest(one(requestPart("parts", nil))))))))))))))), cons(requestPart("elseif", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("STRING"))))))))), cons(requestPart("then", one(block(nil, cons(defDecl("str", nil, nil, lexicalRequest(one(requestPart("parseString", one(lexicalRequest(one(requestPart("lxr", nil)))))))), cons(defDecl("part", nil, nil, lexicalRequest(one(requestPart("requestPart", cons(lexicalRequest(one(requestPart("id", nil))), one(lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("str", nil))), one(lexicalRequest(one(requestPart("nil", nil)))))))))))))), one(assign(lexicalRequest(one(requestPart("parts", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("part", nil))), one(lexicalRequest(one(requestPart("parts", nil))))))))))))))), one(requestPart("else", one(block(nil, cons(defDecl("part", nil, nil, lexicalRequest(one(requestPart("requestPart", cons(lexicalRequest(one(requestPart("id", nil))), one(lexicalRequest(one(requestPart("nil", nil))))))))), cons(assign(lexicalRequest(one(requestPart("parts", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("part", nil))), one(lexicalRequest(one(requestPart("parts", nil))))))))), one(returnStmt(explicitRequest(lexicalRequest(one(requestPart("parts", nil))), one(requestPart("reversed", one(lexicalRequest(one(requestPart("nil", nil))))))))))))))))))))))))))))))))), one(explicitRequest(lexicalRequest(one(requestPart("parts", nil))), one(requestPart("reversed", one(lexicalRequest(one(requestPart("nil", nil))))))))))), cons(methodDecl(one(declarationPart("parseExplicitRequestNoBlock", cons(identifierDeclaration("receiver", nil), one(identifierDeclaration("lxr", nil))))), nil, nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(defDecl("pos", nil, nil, explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("asString", nil)))), cons(defDecl("parts", nil, nil, lexicalRequest(one(requestPart("parseRequestParts", cons(lexicalRequest(one(requestPart("lxr", nil))), one(lexicalRequest(one(requestPart("false", nil))))))))), one(lexicalRequest(one(requestPart("explicitRequest", cons(lexicalRequest(one(requestPart("pos", nil))), cons(lexicalRequest(one(requestPart("receiver", nil))), one(lexicalRequest(one(requestPart("parts", nil)))))))))))))), cons(methodDecl(one(declarationPart("parseExplicitRequest", cons(identifierDeclaration("receiver", nil), one(identifierDeclaration("lxr", nil))))), nil, nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(defDecl("pos", nil, nil, explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("asString", nil)))), cons(defDecl("parts", nil, nil, lexicalRequest(one(requestPart("parseRequestParts", cons(lexicalRequest(one(requestPart("lxr", nil))), one(lexicalRequest(one(requestPart("true", nil))))))))), one(lexicalRequest(one(requestPart("explicitRequest", cons(lexicalRequest(one(requestPart("pos", nil))), cons(lexicalRequest(one(requestPart("receiver", nil))), one(lexicalRequest(one(requestPart("parts", nil)))))))))))))), cons(methodDecl(one(declarationPart("parseTypeExpression", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(defDecl("token", nil, nil, explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil)))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("IDENTIFIER"))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("parseLexicalRequestNoBlock", cons(lexicalRequest(one(requestPart("lxr", nil))), one(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("value", nil)))))))))))))))), cons(lexicalRequest(one(requestPart("print", one(explicitRequest(stringNode("Unexpected token: "), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("asString", nil))))))))))), one(explicitRequest(lexicalRequest(one(requestPart("Exception", nil))), one(requestPart("raise", one(explicitRequest(stringNode("Unexpected token: "), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("asString", nil)))))))))))))))), cons(methodDecl(one(declarationPart("parseExpressionNoOpNoDot", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(defDecl("token", nil, nil, explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil)))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("NUMBER"))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("parseNumber", one(lexicalRequest(one(requestPart("lxr", nil))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("STRING"))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("parseString", one(lexicalRequest(one(requestPart("lxr", nil))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("LPAREN"))))))), one(requestPart("then", one(block(nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(defDecl("expr", nil, nil, lexicalRequest(one(requestPart("parseExpression", one(lexicalRequest(one(requestPart("lxr", nil)))))))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), one(returnStmt(lexicalRequest(one(requestPart("expr", nil)))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("LBRACE"))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("parseBlock", one(lexicalRequest(one(requestPart("lxr", nil))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("IDENTIFIER"))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("parselexicalRequest", one(lexicalRequest(one(requestPart("lxr", nil))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("KEYWORD"))))))), one(requestPart("then", one(block(nil, one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("value", nil))), one(requestPart("==", one(stringNode("object"))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("parseObject", one(lexicalRequest(one(requestPart("lxr", nil)))))))))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("OPERATOR"))))))), one(requestPart("then", one(block(nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(defDecl("pos", nil, nil, explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("asString", nil)))), cons(defDecl("expr", nil, nil, lexicalRequest(one(requestPart("parseExpressionNoOp", one(lexicalRequest(one(requestPart("lxr", nil)))))))), one(returnStmt(lexicalRequest(one(requestPart("explicitRequest", cons(lexicalRequest(one(requestPart("pos", nil))), cons(lexicalRequest(one(requestPart("expr", nil))), one(lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("requestPart", cons(explicitRequest(stringNode("prefix"), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("value", nil))))))), one(lexicalRequest(one(requestPart("nil", nil)))))))), one(lexicalRequest(one(requestPart("nil", nil))))))))))))))))))))))))), cons(lexicalRequest(one(requestPart("print", one(explicitRequest(stringNode("Unexpected token: "), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("asString", nil))))))))))), one(explicitRequest(lexicalRequest(one(requestPart("Exception", nil))), one(requestPart("raise", one(explicitRequest(stringNode("Unexpected token: "), one(requestPart("++", one(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("asString", nil)))))))))))))))))))))), cons(methodDecl(one(declarationPart("parseExpressionNoOp", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(varDecl("left", nil, nil, one(lexicalRequest(one(requestPart("parseExpressionNoOpNoDot", one(lexicalRequest(one(requestPart("lxr", nil))))))))), cons(varDecl("token", nil, nil, one(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("DOT"))))))))), one(requestPart("do", one(block(nil, cons(assign(lexicalRequest(one(requestPart("left", nil))), lexicalRequest(one(requestPart("parseExplicitRequest", cons(lexicalRequest(one(requestPart("left", nil))), one(lexicalRequest(one(requestPart("lxr", nil))))))))), one(assign(lexicalRequest(one(requestPart("token", nil))), explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil)))))))))))), one(returnStmt(lexicalRequest(one(requestPart("left", nil))))))))), cons(methodDecl(one(declarationPart("parseExpression", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(varDecl("left", nil, nil, one(lexicalRequest(one(requestPart("parseExpressionNoOp", one(lexicalRequest(one(requestPart("lxr", nil))))))))), cons(varDecl("token", nil, nil, one(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("OPERATOR"))))))))), one(requestPart("do", one(block(nil, cons(defDecl("pos", nil, nil, explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("asString", nil)))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(defDecl("right", nil, nil, lexicalRequest(one(requestPart("parseExpressionNoOp", one(lexicalRequest(one(requestPart("lxr", nil)))))))), cons(defDecl("args", nil, nil, lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("right", nil))), one(lexicalRequest(one(requestPart("nil", nil))))))))), cons(defDecl("part", nil, nil, lexicalRequest(one(requestPart("requestPart", cons(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("value", nil))), one(lexicalRequest(one(requestPart("args", nil))))))))), cons(defDecl("parts", nil, nil, lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("part", nil))), one(lexicalRequest(one(requestPart("nil", nil))))))))), cons(defDecl("req", nil, nil, lexicalRequest(one(requestPart("explicitRequest", cons(lexicalRequest(one(requestPart("pos", nil))), cons(lexicalRequest(one(requestPart("left", nil))), one(explicitRequest(lexicalRequest(one(requestPart("parts", nil))), one(requestPart("reversed", one(lexicalRequest(one(requestPart("nil", nil)))))))))))))), cons(assign(lexicalRequest(one(requestPart("left", nil))), lexicalRequest(one(requestPart("req", nil)))), one(assign(lexicalRequest(one(requestPart("token", nil))), explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))))))))))))))))))), one(returnStmt(lexicalRequest(one(requestPart("left", nil))))))))), cons(methodDecl(one(declarationPart("parseReturnStatement", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(defDecl("val", nil, nil, lexicalRequest(one(requestPart("parseExpression", one(lexicalRequest(one(requestPart("lxr", nil)))))))), one(lexicalRequest(one(requestPart("returnStmt", one(lexicalRequest(one(requestPart("val", nil))))))))))), cons(methodDecl(one(declarationPart("parseStatement", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(defDecl("token", nil, nil, explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil)))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("KEYWORD"))))))), cons(requestPart("then", one(block(nil, cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("value", nil))), one(requestPart("==", one(stringNode("return"))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("parseReturnStatement", one(lexicalRequest(one(requestPart("lxr", nil))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("value", nil))), one(requestPart("==", one(stringNode("var"))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("parseVarDeclaration", one(lexicalRequest(one(requestPart("lxr", nil))))))))))))))), one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("value", nil))), one(requestPart("==", one(stringNode("def"))))))), one(requestPart("then", one(block(nil, one(returnStmt(lexicalRequest(one(requestPart("parseDefDeclaration", one(lexicalRequest(one(requestPart("lxr", nil))))))))))))))))))))), cons(requestPart("elseif", one(block(nil, one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("COMMENT"))))))))), one(requestPart("then", one(block(nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), one(returnStmt(lexicalRequest(one(requestPart("comment", one(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("value", nil)))))))))))))))))), cons(varDecl("exp", nil, nil, one(lexicalRequest(one(requestPart("parseExpression", one(lexicalRequest(one(requestPart("lxr", nil))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("ASSIGN"))))))), one(requestPart("then", one(block(nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(defDecl("val", nil, nil, lexicalRequest(one(requestPart("parseExpression", one(lexicalRequest(one(requestPart("lxr", nil)))))))), one(assign(lexicalRequest(one(requestPart("exp", nil))), lexicalRequest(one(requestPart("assign", cons(lexicalRequest(one(requestPart("exp", nil))), one(lexicalRequest(one(requestPart("val", nil)))))))))))))))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("NEWLINE"))))))), one(requestPart("then", one(block(nil, one(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil)))))))))), one(lexicalRequest(one(requestPart("exp", nil)))))))))), cons(methodDecl(one(declarationPart("parseBlock", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(varDecl("params", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(varDecl("body", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("LBRACE"))))))), one(requestPart("then", one(block(nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("NEWLINE"))))))))), one(requestPart("do", one(block(nil, one(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil)))))))))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("!=", one(stringNode("RBRACE"))))))))), one(requestPart("do", one(block(nil, cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("ARROW"))))))), cons(requestPart("then", one(block(nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(assign(lexicalRequest(one(requestPart("params", nil))), lexicalRequest(one(requestPart("body", nil)))), one(assign(lexicalRequest(one(requestPart("body", nil))), lexicalRequest(one(requestPart("nil", nil)))))))))), one(requestPart("else", one(block(nil, one(assign(lexicalRequest(one(requestPart("body", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("parseStatement", one(lexicalRequest(one(requestPart("lxr", nil))))))), one(lexicalRequest(one(requestPart("body", nil))))))))))))))))), one(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("NEWLINE"))))))))), one(requestPart("do", one(block(nil, one(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil)))))))))))))))))), one(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))))))))))))), one(lexicalRequest(one(requestPart("block", cons(lexicalRequest(one(requestPart("params", nil))), one(explicitRequest(lexicalRequest(one(requestPart("body", nil))), one(requestPart("reversed", one(lexicalRequest(one(requestPart("nil", nil))))))))))))))))), cons(methodDecl(one(declarationPart("parseAnnotations", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(varDecl("anns", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("IDENTIFIER"))))))))), one(requestPart("do", one(block(nil, cons(assign(lexicalRequest(one(requestPart("anns", nil))), lexicalRequest(one(requestPart("cons", cons(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("value", nil))), one(lexicalRequest(one(requestPart("anns", nil))))))))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("COMMA"))))))), one(requestPart("then", one(block(nil, one(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))))))))))))))))))), one(explicitRequest(lexicalRequest(one(requestPart("anns", nil))), one(requestPart("reversed", one(lexicalRequest(one(requestPart("nil", nil)))))))))))), cons(methodDecl(one(declarationPart("parseDefDeclaration", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(defDecl("name", nil, nil, explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("value", nil)))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(varDecl("dtype", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("COLON"))))))), one(requestPart("then", one(block(nil, cons(comment(" Type annotation"), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), one(assign(lexicalRequest(one(requestPart("dtype", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("parseExpression", one(lexicalRequest(one(requestPart("lxr", nil))))))), one(lexicalRequest(one(requestPart("nil", nil)))))))))))))))))), cons(varDecl("anns", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("KEYWORD"))))))), one(requestPart("then", one(block(nil, one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("value", nil))), one(requestPart("==", one(stringNode("is"))))))), one(requestPart("then", one(block(nil, one(assign(lexicalRequest(one(requestPart("anns", nil))), lexicalRequest(one(requestPart("parseAnnotations", one(lexicalRequest(one(requestPart("lxr", nil)))))))))))))))))))))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(defDecl("val", nil, nil, lexicalRequest(one(requestPart("parseExpression", one(lexicalRequest(one(requestPart("lxr", nil)))))))), one(lexicalRequest(one(requestPart("defDecl", cons(lexicalRequest(one(requestPart("name", nil))), cons(lexicalRequest(one(requestPart("dtype", nil))), cons(lexicalRequest(one(requestPart("anns", nil))), one(lexicalRequest(one(requestPart("val", nil))))))))))))))))))))), cons(methodDecl(one(declarationPart("parseVarDeclaration", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(defDecl("name", nil, nil, explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("value", nil)))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(varDecl("dtype", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("COLON"))))))), one(requestPart("then", one(block(nil, cons(comment(" Type annotation"), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), one(assign(lexicalRequest(one(requestPart("dtype", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("parseExpression", one(lexicalRequest(one(requestPart("lxr", nil))))))), one(lexicalRequest(one(requestPart("nil", nil)))))))))))))))))), cons(varDecl("anns", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("KEYWORD"))))))), one(requestPart("then", one(block(nil, one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("value", nil))), one(requestPart("==", one(stringNode("is"))))))), one(requestPart("then", one(block(nil, one(assign(lexicalRequest(one(requestPart("anns", nil))), lexicalRequest(one(requestPart("parseAnnotations", one(lexicalRequest(one(requestPart("lxr", nil)))))))))))))))))))))), one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("ASSIGN"))))))), cons(requestPart("then", one(block(nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(defDecl("val", nil, nil, lexicalRequest(one(requestPart("parseExpression", one(lexicalRequest(one(requestPart("lxr", nil)))))))), one(lexicalRequest(one(requestPart("varDecl", cons(lexicalRequest(one(requestPart("name", nil))), cons(lexicalRequest(one(requestPart("dtype", nil))), cons(lexicalRequest(one(requestPart("anns", nil))), one(lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("val", nil))), one(lexicalRequest(one(requestPart("nil", nil))))))))))))))))))))), one(requestPart("else", one(block(nil, one(lexicalRequest(one(requestPart("varDecl", cons(lexicalRequest(one(requestPart("name", nil))), cons(lexicalRequest(one(requestPart("dtype", nil))), cons(lexicalRequest(one(requestPart("anns", nil))), one(lexicalRequest(one(requestPart("nil", nil))))))))))))))))))))))))))), cons(methodDecl(one(declarationPart("parseMethodBody", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(varDecl("body", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("!=", one(stringNode("RBRACE"))))))))), one(requestPart("do", one(block(nil, one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("NEWLINE"))))))), cons(requestPart("then", one(block(nil, one(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))))))), cons(requestPart("elseif", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("KEYWORD"))))))))), cons(requestPart("then", one(block(nil, one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("value", nil))), one(requestPart("==", one(stringNode("var"))))))), cons(requestPart("then", one(block(nil, cons(defDecl("dec", nil, nil, lexicalRequest(one(requestPart("parseVarDeclaration", one(lexicalRequest(one(requestPart("lxr", nil)))))))), one(assign(lexicalRequest(one(requestPart("body", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("dec", nil))), one(lexicalRequest(one(requestPart("body", nil)))))))))))))), cons(requestPart("elseif", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("value", nil))), one(requestPart("==", one(stringNode("def"))))))))), cons(requestPart("then", one(block(nil, cons(defDecl("dec", nil, nil, lexicalRequest(one(requestPart("parseDefDeclaration", one(lexicalRequest(one(requestPart("lxr", nil)))))))), one(assign(lexicalRequest(one(requestPart("body", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("dec", nil))), one(lexicalRequest(one(requestPart("body", nil)))))))))))))), one(requestPart("else", one(block(nil, one(assign(lexicalRequest(one(requestPart("body", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("parseStatement", one(lexicalRequest(one(requestPart("lxr", nil))))))), one(lexicalRequest(one(requestPart("body", nil))))))))))))))))))))))), one(requestPart("else", one(block(nil, one(assign(lexicalRequest(one(requestPart("body", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("parseStatement", one(lexicalRequest(one(requestPart("lxr", nil))))))), one(lexicalRequest(one(requestPart("body", nil)))))))))))))))))))))))))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), one(explicitRequest(lexicalRequest(one(requestPart("body", nil))), one(requestPart("reversed", one(lexicalRequest(one(requestPart("nil", nil))))))))))))), cons(methodDecl(one(declarationPart("parseMethodDeclaration", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(varDecl("parts", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("IDENTIFIER"))))))))), one(requestPart("do", one(block(nil, cons(defDecl("id", nil, nil, explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("value", nil)))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("LPAREN"))))))), cons(requestPart("then", one(block(nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(varDecl("args", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("!=", one(stringNode("RPAREN"))))), one(requestPart("&&", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("!=", one(stringNode("EOF"))))))))))))), one(requestPart("do", one(block(nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("expectToken", one(stringNode("IDENTIFIER"))))), cons(defDecl("idToken", nil, nil, explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil)))), cons(varDecl("dtype", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("COLON"))))))), one(requestPart("then", one(block(nil, cons(comment(" Type annotation"), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), one(assign(lexicalRequest(one(requestPart("dtype", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("parseTypeExpression", one(lexicalRequest(one(requestPart("lxr", nil))))))), one(lexicalRequest(one(requestPart("nil", nil)))))))))))))))))), cons(assign(lexicalRequest(one(requestPart("args", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("identifierDeclaration", cons(explicitRequest(lexicalRequest(one(requestPart("idToken", nil))), one(requestPart("value", nil))), one(lexicalRequest(one(requestPart("dtype", nil)))))))), one(lexicalRequest(one(requestPart("args", nil))))))))), one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("COMMA"))))))), one(requestPart("then", one(block(nil, one(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))))))))))))))))))))))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(defDecl("part", nil, nil, lexicalRequest(one(requestPart("declarationPart", cons(lexicalRequest(one(requestPart("id", nil))), one(explicitRequest(lexicalRequest(one(requestPart("args", nil))), one(requestPart("reversed", one(lexicalRequest(one(requestPart("nil", nil))))))))))))), one(assign(lexicalRequest(one(requestPart("parts", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("part", nil))), one(lexicalRequest(one(requestPart("parts", nil)))))))))))))))))), one(requestPart("else", one(block(nil, cons(defDecl("part", nil, nil, lexicalRequest(one(requestPart("declarationPart", cons(lexicalRequest(one(requestPart("id", nil))), one(lexicalRequest(one(requestPart("nil", nil))))))))), one(assign(lexicalRequest(one(requestPart("parts", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("part", nil))), one(lexicalRequest(one(requestPart("parts", nil))))))))))))))))))))))))))), cons(varDecl("dtype", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("ARROW"))))))), one(requestPart("then", one(block(nil, cons(comment(" Type annotation"), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), one(assign(lexicalRequest(one(requestPart("dtype", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("parseTypeExpression", one(lexicalRequest(one(requestPart("lxr", nil))))))), one(lexicalRequest(one(requestPart("nil", nil)))))))))))))))))), cons(varDecl("anns", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("KEYWORD"))))))), one(requestPart("then", one(block(nil, one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("value", nil))), one(requestPart("==", one(stringNode("is"))))))), one(requestPart("then", one(block(nil, one(assign(lexicalRequest(one(requestPart("anns", nil))), lexicalRequest(one(requestPart("parseAnnotations", one(lexicalRequest(one(requestPart("lxr", nil)))))))))))))))))))))), cons(comment("lxr.advance"), cons(defDecl("body", nil, nil, lexicalRequest(one(requestPart("parseMethodBody", one(lexicalRequest(one(requestPart("lxr", nil)))))))), one(lexicalRequest(one(requestPart("methodDecl", cons(explicitRequest(lexicalRequest(one(requestPart("parts", nil))), one(requestPart("reversed", one(lexicalRequest(one(requestPart("nil", nil))))))), cons(lexicalRequest(one(requestPart("dtype", nil))), cons(lexicalRequest(one(requestPart("anns", nil))), one(lexicalRequest(one(requestPart("body", nil))))))))))))))))))))), cons(methodDecl(one(declarationPart("parseClassDeclaration", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(varDecl("parts", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("IDENTIFIER"))))))))), one(requestPart("do", one(block(nil, cons(defDecl("id", nil, nil, explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("value", nil)))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("LPAREN"))))))), cons(requestPart("then", one(block(nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(varDecl("args", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("!=", one(stringNode("RPAREN"))))), one(requestPart("&&", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("!=", one(stringNode("EOF"))))))))))))), one(requestPart("do", one(block(nil, cons(assign(lexicalRequest(one(requestPart("args", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("identifierDeclaration", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("value", nil))))))), one(lexicalRequest(one(requestPart("args", nil))))))))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("COMMA"))))))), one(requestPart("then", one(block(nil, one(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))))))))))))))))))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(defDecl("part", nil, nil, lexicalRequest(one(requestPart("declarationPart", cons(lexicalRequest(one(requestPart("id", nil))), one(explicitRequest(lexicalRequest(one(requestPart("args", nil))), one(requestPart("reversed", one(lexicalRequest(one(requestPart("nil", nil))))))))))))), one(assign(lexicalRequest(one(requestPart("parts", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("part", nil))), one(lexicalRequest(one(requestPart("parts", nil)))))))))))))))))), one(requestPart("else", one(block(nil, cons(defDecl("part", nil, nil, lexicalRequest(one(requestPart("declarationPart", cons(lexicalRequest(one(requestPart("id", nil))), one(lexicalRequest(one(requestPart("nil", nil))))))))), one(assign(lexicalRequest(one(requestPart("parts", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("part", nil))), one(lexicalRequest(one(requestPart("parts", nil))))))))))))))))))))))))))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(defDecl("body", nil, nil, lexicalRequest(one(requestPart("parseObjectBody", one(lexicalRequest(one(requestPart("lxr", nil)))))))), cons(defDecl("obj", nil, nil, lexicalRequest(one(requestPart("objectConstructor", one(lexicalRequest(one(requestPart("body", nil)))))))), one(lexicalRequest(one(requestPart("methodDecl", cons(explicitRequest(lexicalRequest(one(requestPart("parts", nil))), one(requestPart("reversed", one(lexicalRequest(one(requestPart("nil", nil))))))), cons(lexicalRequest(one(requestPart("nil", nil))), cons(lexicalRequest(one(requestPart("nil", nil))), one(lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("obj", nil))), one(lexicalRequest(one(requestPart("nil", nil))))))))))))))))))))))), cons(methodDecl(one(declarationPart("parseObjectBody", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(varDecl("body", nil, nil, one(lexicalRequest(one(requestPart("nil", nil))))), cons(varDecl("token", nil, nil, one(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil))))), cons(lexicalRequest(cons(requestPart("while", one(block(nil, one(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("nature", nil))), one(requestPart("!=", one(stringNode("EOF"))))), one(requestPart("&&", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("nature", nil))), one(requestPart("!=", one(stringNode("RBRACE"))))))))))))), one(requestPart("do", one(block(nil, cons(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("NEWLINE"))))))), cons(requestPart("then", one(block(nil, one(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))))))), cons(requestPart("elseif", one(block(nil, one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("nature", nil))), one(requestPart("==", one(stringNode("KEYWORD"))))))))), cons(requestPart("then", one(block(nil, one(lexicalRequest(cons(requestPart("if", one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("value", nil))), one(requestPart("==", one(stringNode("var"))))))), cons(requestPart("then", one(block(nil, cons(defDecl("dec", nil, nil, lexicalRequest(one(requestPart("parseVarDeclaration", one(lexicalRequest(one(requestPart("lxr", nil)))))))), one(assign(lexicalRequest(one(requestPart("body", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("dec", nil))), one(lexicalRequest(one(requestPart("body", nil)))))))))))))), cons(requestPart("elseif", one(block(nil, one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("value", nil))), one(requestPart("==", one(stringNode("def"))))))))), cons(requestPart("then", one(block(nil, cons(defDecl("dec", nil, nil, lexicalRequest(one(requestPart("parseDefDeclaration", one(lexicalRequest(one(requestPart("lxr", nil)))))))), one(assign(lexicalRequest(one(requestPart("body", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("dec", nil))), one(lexicalRequest(one(requestPart("body", nil)))))))))))))), cons(requestPart("elseif", one(block(nil, one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("value", nil))), one(requestPart("==", one(stringNode("method"))))))))), cons(requestPart("then", one(block(nil, cons(defDecl("dec", nil, nil, lexicalRequest(one(requestPart("parseMethodDeclaration", one(lexicalRequest(one(requestPart("lxr", nil)))))))), one(assign(lexicalRequest(one(requestPart("body", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("dec", nil))), one(lexicalRequest(one(requestPart("body", nil)))))))))))))), cons(requestPart("elseif", one(block(nil, one(explicitRequest(explicitRequest(lexicalRequest(one(requestPart("token", nil))), one(requestPart("value", nil))), one(requestPart("==", one(stringNode("class"))))))))), cons(requestPart("then", one(block(nil, cons(defDecl("dec", nil, nil, lexicalRequest(one(requestPart("parseClassDeclaration", one(lexicalRequest(one(requestPart("lxr", nil)))))))), one(assign(lexicalRequest(one(requestPart("body", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("dec", nil))), one(lexicalRequest(one(requestPart("body", nil)))))))))))))), one(requestPart("else", one(block(nil, cons(defDecl("stmt", nil, nil, lexicalRequest(one(requestPart("parseStatement", one(lexicalRequest(one(requestPart("lxr", nil)))))))), one(assign(lexicalRequest(one(requestPart("body", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("stmt", nil))), one(lexicalRequest(one(requestPart("body", nil)))))))))))))))))))))))))))), one(requestPart("else", one(block(nil, cons(defDecl("stmt", nil, nil, lexicalRequest(one(requestPart("parseStatement", one(lexicalRequest(one(requestPart("lxr", nil)))))))), one(assign(lexicalRequest(one(requestPart("body", nil))), lexicalRequest(one(requestPart("cons", cons(lexicalRequest(one(requestPart("stmt", nil))), one(lexicalRequest(one(requestPart("body", nil)))))))))))))))))))), one(assign(lexicalRequest(one(requestPart("token", nil))), explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("current", nil)))))))))))), one(explicitRequest(lexicalRequest(one(requestPart("body", nil))), one(requestPart("reversed", one(lexicalRequest(one(requestPart("nil", nil)))))))))))), cons(methodDecl(one(declarationPart("parseObject", one(identifierDeclaration("lxr", nil)))), nil, nil, cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), cons(defDecl("body", nil, nil, lexicalRequest(one(requestPart("parseObjectBody", one(lexicalRequest(one(requestPart("lxr", nil)))))))), cons(explicitRequest(lexicalRequest(one(requestPart("lxr", nil))), one(requestPart("advance", nil))), one(lexicalRequest(one(requestPart("objectConstructor", one(lexicalRequest(one(requestPart("body", nil))))))))))))), one(methodDecl(one(declarationPart("parse", one(identifierDeclaration("code", nil)))), nil, nil, cons(defDecl("lxr", nil, nil, lexicalRequest(one(requestPart("lexer", one(lexicalRequest(one(requestPart("code", nil)))))))), cons(defDecl("body", nil, nil, lexicalRequest(one(requestPart("parseObjectBody", one(lexicalRequest(one(requestPart("lxr", nil)))))))), one(lexicalRequest(one(requestPart("objectConstructor", one(lexicalRequest(one(requestPart("body", nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
