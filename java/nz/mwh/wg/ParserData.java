package nz.mwh.wg;

import nz.mwh.wg.ast.ASTNode;

public class ParserData extends ASTConstructors {
    @SuppressWarnings("unchecked")
    public static final ASTNode program = objectConstructor(cons(methodDecl(cons(declarationPart("EOFToken", cons(identifierDeclaration("index", nil), nil)), nil), nil, nil, cons(lexicalRequest(cons(requestPart("SymbolToken", cons(lexicalRequest(cons(requestPart("index", nil), nil)), cons(stringNode("EOF"), nil))), nil)), nil)), cons(methodDecl(cons(declarationPart("NumberToken", cons(identifierDeclaration("index", nil), cons(identifierDeclaration("val", nil), nil))), nil), nil, nil, cons(objectConstructor(cons(defDecl("nature", nil, cons("public", nil), stringNode("NUMBER")), cons(defDecl("value", nil, cons("public", nil), lexicalRequest(cons(requestPart("val", nil), nil))), cons(defDecl("position", nil, cons("public", nil), lexicalRequest(cons(requestPart("index", nil), nil))), cons(methodDecl(cons(declarationPart("asString", nil), nil), nil, nil, cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("nature", nil), nil)), cons(requestPart("++", cons(stringNode("("), nil)), nil)), cons(requestPart("++", cons(lexicalRequest(cons(requestPart("value", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(")["), nil)), nil)), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("position", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode("]"), nil)), nil)), nil)), nil))))), nil)), cons(methodDecl(cons(declarationPart("LParenToken", cons(identifierDeclaration("index", nil), nil)), nil), nil, nil, cons(lexicalRequest(cons(requestPart("SymbolToken", cons(lexicalRequest(cons(requestPart("index", nil), nil)), cons(stringNode("LPAREN"), nil))), nil)), nil)), cons(methodDecl(cons(declarationPart("RParenToken", cons(identifierDeclaration("index", nil), nil)), nil), nil, nil, cons(lexicalRequest(cons(requestPart("SymbolToken", cons(lexicalRequest(cons(requestPart("index", nil), nil)), cons(stringNode("RPAREN"), nil))), nil)), nil)), cons(methodDecl(cons(declarationPart("LBraceToken", cons(identifierDeclaration("index", nil), nil)), nil), nil, nil, cons(lexicalRequest(cons(requestPart("SymbolToken", cons(lexicalRequest(cons(requestPart("index", nil), nil)), cons(stringNode("LBRACE"), nil))), nil)), nil)), cons(methodDecl(cons(declarationPart("RBraceToken", cons(identifierDeclaration("index", nil), nil)), nil), nil, nil, cons(lexicalRequest(cons(requestPart("SymbolToken", cons(lexicalRequest(cons(requestPart("index", nil), nil)), cons(stringNode("RBRACE"), nil))), nil)), nil)), cons(methodDecl(cons(declarationPart("CommaToken", cons(identifierDeclaration("index", nil), nil)), nil), nil, nil, cons(lexicalRequest(cons(requestPart("SymbolToken", cons(lexicalRequest(cons(requestPart("index", nil), nil)), cons(stringNode("COMMA"), nil))), nil)), nil)), cons(methodDecl(cons(declarationPart("DotToken", cons(identifierDeclaration("index", nil), nil)), nil), nil, nil, cons(lexicalRequest(cons(requestPart("SymbolToken", cons(lexicalRequest(cons(requestPart("index", nil), nil)), cons(stringNode("DOT"), nil))), nil)), nil)), cons(methodDecl(cons(declarationPart("IdentifierToken", cons(identifierDeclaration("index", nil), cons(identifierDeclaration("val", nil), nil))), nil), nil, nil, cons(objectConstructor(cons(defDecl("nature", nil, cons("public", nil), stringNode("IDENTIFIER")), cons(defDecl("value", nil, cons("public", nil), lexicalRequest(cons(requestPart("val", nil), nil))), cons(defDecl("position", nil, cons("public", nil), lexicalRequest(cons(requestPart("index", nil), nil))), cons(methodDecl(cons(declarationPart("asString", nil), nil), nil, nil, cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("nature", nil), nil)), cons(requestPart("++", cons(stringNode("("), nil)), nil)), cons(requestPart("++", cons(lexicalRequest(cons(requestPart("value", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(")["), nil)), nil)), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("position", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode("]"), nil)), nil)), nil)), nil))))), nil)), cons(methodDecl(cons(declarationPart("KeywordToken", cons(identifierDeclaration("index", nil), cons(identifierDeclaration("val", nil), nil))), nil), nil, nil, cons(objectConstructor(cons(defDecl("nature", nil, cons("public", nil), stringNode("KEYWORD")), cons(defDecl("value", nil, cons("public", nil), lexicalRequest(cons(requestPart("val", nil), nil))), cons(defDecl("position", nil, cons("public", nil), lexicalRequest(cons(requestPart("index", nil), nil))), cons(methodDecl(cons(declarationPart("asString", nil), nil), nil, nil, cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("nature", nil), nil)), cons(requestPart("++", cons(stringNode("("), nil)), nil)), cons(requestPart("++", cons(lexicalRequest(cons(requestPart("value", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(")"), nil)), nil)), cons(requestPart("++", cons(stringNode("["), nil)), nil)), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("position", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode("]"), nil)), nil)), nil)), nil))))), nil)), cons(methodDecl(cons(declarationPart("OperatorToken", cons(identifierDeclaration("index", nil), cons(identifierDeclaration("val", nil), nil))), nil), nil, nil, cons(objectConstructor(cons(defDecl("nature", nil, cons("public", nil), stringNode("OPERATOR")), cons(defDecl("value", nil, cons("public", nil), lexicalRequest(cons(requestPart("val", nil), nil))), cons(defDecl("position", nil, cons("public", nil), lexicalRequest(cons(requestPart("index", nil), nil))), cons(methodDecl(cons(declarationPart("asString", nil), nil), nil, nil, cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("nature", nil), nil)), cons(requestPart("++", cons(stringNode("("), nil)), nil)), cons(requestPart("++", cons(lexicalRequest(cons(requestPart("value", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(")"), nil)), nil)), cons(requestPart("++", cons(stringNode("["), nil)), nil)), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("position", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode("]"), nil)), nil)), nil)), nil))))), nil)), cons(methodDecl(cons(declarationPart("StringToken", cons(identifierDeclaration("index", nil), cons(identifierDeclaration("val", nil), nil))), nil), nil, nil, cons(objectConstructor(cons(defDecl("nature", nil, cons("public", nil), stringNode("STRING")), cons(defDecl("value", nil, cons("public", nil), lexicalRequest(cons(requestPart("val", nil), nil))), cons(defDecl("position", nil, cons("public", nil), lexicalRequest(cons(requestPart("index", nil), nil))), cons(methodDecl(cons(declarationPart("asString", nil), nil), nil, nil, cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("nature", nil), nil)), cons(requestPart("++", cons(stringNode("("), nil)), nil)), cons(requestPart("++", cons(lexicalRequest(cons(requestPart("value", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(")"), nil)), nil)), cons(requestPart("++", cons(stringNode("["), nil)), nil)), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("position", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode("]"), nil)), nil)), nil)), nil))))), nil)), cons(methodDecl(cons(declarationPart("CommentToken", cons(identifierDeclaration("index", nil), cons(identifierDeclaration("val", nil), nil))), nil), nil, nil, cons(objectConstructor(cons(defDecl("nature", nil, cons("public", nil), stringNode("COMMENT")), cons(defDecl("value", nil, cons("public", nil), lexicalRequest(cons(requestPart("val", nil), nil))), cons(defDecl("position", nil, cons("public", nil), lexicalRequest(cons(requestPart("index", nil), nil))), cons(methodDecl(cons(declarationPart("asString", nil), nil), nil, nil, cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("nature", nil), nil)), cons(requestPart("++", cons(stringNode("("), nil)), nil)), cons(requestPart("++", cons(lexicalRequest(cons(requestPart("value", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(")"), nil)), nil)), cons(requestPart("++", cons(stringNode("["), nil)), nil)), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("position", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode("]"), nil)), nil)), nil)), nil))))), nil)), cons(methodDecl(cons(declarationPart("EqualsToken", cons(identifierDeclaration("index", nil), nil)), nil), nil, nil, cons(lexicalRequest(cons(requestPart("SymbolToken", cons(lexicalRequest(cons(requestPart("index", nil), nil)), cons(stringNode("EQUALS"), nil))), nil)), nil)), cons(methodDecl(cons(declarationPart("AssignToken", cons(identifierDeclaration("index", nil), nil)), nil), nil, nil, cons(lexicalRequest(cons(requestPart("SymbolToken", cons(lexicalRequest(cons(requestPart("index", nil), nil)), cons(stringNode("ASSIGN"), nil))), nil)), nil)), cons(methodDecl(cons(declarationPart("ArrowToken", cons(identifierDeclaration("index", nil), nil)), nil), nil, nil, cons(lexicalRequest(cons(requestPart("SymbolToken", cons(lexicalRequest(cons(requestPart("index", nil), nil)), cons(stringNode("ARROW"), nil))), nil)), nil)), cons(methodDecl(cons(declarationPart("SymbolToken", cons(identifierDeclaration("index", nil), cons(identifierDeclaration("nat", nil), nil))), nil), nil, nil, cons(objectConstructor(cons(defDecl("nature", nil, cons("public", nil), lexicalRequest(cons(requestPart("nat", nil), nil))), cons(defDecl("position", nil, cons("public", nil), lexicalRequest(cons(requestPart("index", nil), nil))), cons(methodDecl(cons(declarationPart("asString", nil), nil), nil, nil, cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("nature", nil), nil)), cons(requestPart("++", cons(stringNode("["), nil)), nil)), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("position", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode("]"), nil)), nil)), nil)), nil)))), nil)), cons(methodDecl(cons(declarationPart("NewlineToken", cons(identifierDeclaration("index", nil), nil)), nil), nil, nil, cons(lexicalRequest(cons(requestPart("SymbolToken", cons(lexicalRequest(cons(requestPart("index", nil), nil)), cons(stringNode("NEWLINE"), nil))), nil)), nil)), cons(methodDecl(cons(declarationPart("CommentToken", cons(identifierDeclaration("index", nil), cons(identifierDeclaration("text", nil), nil))), nil), nil, nil, cons(objectConstructor(cons(defDecl("nature", nil, cons("public", nil), stringNode("COMMENT")), cons(defDecl("position", nil, cons("public", nil), lexicalRequest(cons(requestPart("index", nil), nil))), cons(defDecl("value", nil, cons("public", nil), lexicalRequest(cons(requestPart("text", nil), nil))), cons(methodDecl(cons(declarationPart("asString", nil), nil), nil, nil, cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("nature", nil), nil)), cons(requestPart("++", cons(stringNode("("), nil)), nil)), cons(requestPart("++", cons(lexicalRequest(cons(requestPart("value", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(")["), nil)), nil)), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("position", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode("]"), nil)), nil)), nil)), nil))))), nil)), cons(methodDecl(cons(declarationPart("isOperatorCharacter", cons(identifierDeclaration("c", nil), nil)), nil), nil, nil, cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("+"), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("-"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("*"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("/"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("="), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode(":"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("|"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("&"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("!"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode(">"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("<"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("."), nil)), nil)), nil)), nil)), nil)), cons(methodDecl(cons(declarationPart("isIdentifierStart", cons(identifierDeclaration("c", nil), nil)), nil), nil, nil, cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("a"), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("b"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("c"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("d"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("e"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("f"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("g"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("h"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("i"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("j"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("k"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("l"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("m"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("n"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("o"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("p"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("q"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("r"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("s"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("t"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("u"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("v"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("w"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("x"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("y"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("z"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("A"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("B"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("C"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("D"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("E"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("F"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("G"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("H"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("I"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("J"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("K"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("L"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("M"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("N"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("O"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("P"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("Q"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("R"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("S"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("T"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("U"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("V"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("W"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("X"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("Y"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("Z"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("_"), nil)), nil)), nil)), nil)), nil)), cons(methodDecl(cons(declarationPart("isDigit", cons(identifierDeclaration("c", nil), nil)), nil), nil, nil, cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("1"), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("2"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("3"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("4"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("5"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("6"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("7"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("8"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("9"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("0"), nil)), nil)), nil)), nil)), nil)), cons(methodDecl(cons(declarationPart("lexer", cons(identifierDeclaration("code", nil), nil)), nil), nil, nil, cons(objectConstructor(cons(defDecl("source", nil, nil, lexicalRequest(cons(requestPart("code", nil), nil))), cons(varDecl("index", nil, nil, cons(numberNode(1), nil)), cons(varDecl("line", nil, nil, cons(numberNode(1), nil)), cons(varDecl("column", nil, nil, cons(numberNode(0), nil)), cons(varDecl("lineStart", nil, nil, cons(numberNode(0), nil)), cons(varDecl("currentToken", nil, nil, cons(lexicalRequest(cons(requestPart("nextToken", nil), nil)), nil)), cons(methodDecl(cons(declarationPart("nextToken", nil), nil), nil, nil, cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart(">", cons(explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("size", nil), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("EOFToken", cons(lexicalRequest(cons(requestPart("index", nil), nil)), nil)), nil))), nil)), nil)), nil))), cons(varDecl("c", nil, nil, cons(explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("at", cons(lexicalRequest(cons(requestPart("index", nil), nil)), nil)), nil)), nil)), cons(assign(lexicalRequest(cons(requestPart("column", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("-", cons(lexicalRequest(cons(requestPart("lineStart", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("index", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("+", cons(numberNode(1), nil)), nil))), cons(defDecl("location", nil, nil, explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("line", nil), nil)), cons(requestPart("asString", nil), nil)), cons(requestPart("++", cons(stringNode(":"), nil)), nil)), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("column", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode(" "), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("nextToken", nil), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("("), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("LParenToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), nil)), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode(")"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("RParenToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), nil)), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart(">", cons(stringNode("z"), nil)), nil)), cons(requestPart("&&", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("<", cons(stringNode("|"), nil)), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("LBraceToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), nil)), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("}"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("RBraceToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), nil)), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode(","), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("CommaToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), nil)), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(lexicalRequest(cons(requestPart("isOperatorCharacter", cons(lexicalRequest(cons(requestPart("c", nil), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(defDecl("startIndex", nil, nil, lexicalRequest(cons(requestPart("index", nil), nil))), cons(varDecl("op", nil, nil, cons(lexicalRequest(cons(requestPart("c", nil), nil)), nil)), cons(assign(lexicalRequest(cons(requestPart("c", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("at", cons(lexicalRequest(cons(requestPart("index", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("index", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("+", cons(numberNode(1), nil)), nil))), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("isOperatorCharacter", cons(lexicalRequest(cons(requestPart("c", nil), nil)), nil)), nil)), cons(requestPart("&&", cons(explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("<=", cons(explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("size", nil), nil)), nil)), nil)), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("op", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("op", nil), nil)), cons(requestPart("++", cons(lexicalRequest(cons(requestPart("c", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("c", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("at", cons(lexicalRequest(cons(requestPart("index", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("index", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("+", cons(numberNode(1), nil)), nil))), nil)))), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("index", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("-", cons(numberNode(1), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("op", nil), nil)), cons(requestPart("==", cons(stringNode(":="), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("AssignToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), nil)), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("op", nil), nil)), cons(requestPart("==", cons(stringNode("="), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("EqualsToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), nil)), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("op", nil), nil)), cons(requestPart("==", cons(stringNode("->"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("ArrowToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), nil)), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("op", nil), nil)), cons(requestPart("==", cons(stringNode("."), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("DotToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), nil)), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("op", nil), nil)), cons(requestPart("==", cons(stringNode(":"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("SymbolToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), cons(stringNode("COLON"), nil))), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("op", nil), nil)), cons(requestPart("==", cons(stringNode("//"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(varDecl("cp", nil, nil, cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("firstCodepoint", nil), nil)), nil)), cons(varDecl("text", nil, nil, cons(stringNode(""), nil)), cons(assign(lexicalRequest(cons(requestPart("index", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("+", cons(numberNode(1), nil)), nil))), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("cp", nil), nil)), cons(requestPart("!=", cons(numberNode(10), nil)), nil)), cons(requestPart("&&", cons(explicitRequest(lexicalRequest(cons(requestPart("cp", nil), nil)), cons(requestPart("!=", cons(numberNode(13), nil)), nil)), nil)), nil)), cons(requestPart("&&", cons(explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("<=", cons(explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("size", nil), nil)), nil)), nil)), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("text", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("text", nil), nil)), cons(requestPart("++", cons(lexicalRequest(cons(requestPart("c", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("c", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("at", cons(lexicalRequest(cons(requestPart("index", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("cp", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("firstCodepoint", nil), nil))), cons(assign(lexicalRequest(cons(requestPart("index", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("+", cons(numberNode(1), nil)), nil))), nil))))), nil)), nil))), cons(returnStmt(lexicalRequest(cons(requestPart("CommentToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), cons(lexicalRequest(cons(requestPart("text", nil), nil)), nil))), nil))), nil)))))), nil)), nil))), cons(returnStmt(lexicalRequest(cons(requestPart("OperatorToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), cons(lexicalRequest(cons(requestPart("op", nil), nil)), nil))), nil))), nil)))))))))))))), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("firstCodepoint", nil), nil)), cons(requestPart("==", cons(numberNode(13), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("c", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("at", cons(lexicalRequest(cons(requestPart("index", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("index", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("+", cons(numberNode(1), nil)), nil))), nil))), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("firstCodepoint", nil), nil)), cons(requestPart("==", cons(numberNode(10), nil)), nil)), cons(requestPart("||", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("firstCodepoint", nil), nil)), cons(requestPart("==", cons(numberNode(8232), nil)), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("line", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("line", nil), nil)), cons(requestPart("+", cons(numberNode(1), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("lineStart", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("-", cons(numberNode(1), nil)), nil))), cons(returnStmt(lexicalRequest(cons(requestPart("NewlineToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), nil)), nil))), nil)))), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("firstCodepoint", nil), nil)), cons(requestPart("==", cons(numberNode(34), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(varDecl("value", nil, nil, cons(stringNode(""), nil)), cons(varDecl("escaped", nil, nil, cons(lexicalRequest(cons(requestPart("false", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("at", cons(lexicalRequest(cons(requestPart("index", nil), nil)), nil)), nil)), cons(requestPart("firstCodepoint", nil), nil)), cons(requestPart("!=", cons(numberNode(34), nil)), nil)), cons(requestPart("||", cons(lexicalRequest(cons(requestPart("escaped", nil), nil)), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(varDecl("escapeNext", nil, nil, cons(lexicalRequest(cons(requestPart("false", nil), nil)), nil)), cons(defDecl("cp", nil, nil, explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("at", cons(lexicalRequest(cons(requestPart("index", nil), nil)), nil)), nil)), cons(requestPart("firstCodepoint", nil), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("cp", nil), nil)), cons(requestPart("==", cons(numberNode(92), nil)), nil)), cons(requestPart("&&", cons(explicitRequest(lexicalRequest(cons(requestPart("escaped", nil), nil)), cons(requestPart("==", cons(lexicalRequest(cons(requestPart("false", nil), nil)), nil)), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("escapeNext", nil), nil)), lexicalRequest(cons(requestPart("true", nil), nil))), nil)), nil)), cons(requestPart("elseif", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("escaped", nil), nil)), cons(requestPart("&&", cons(explicitRequest(lexicalRequest(cons(requestPart("cp", nil), nil)), cons(requestPart("==", cons(numberNode(110), nil)), nil)), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("value", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("value", nil), nil)), cons(requestPart("++", cons(stringNode("\n"), nil)), nil))), nil)), nil)), cons(requestPart("elseif", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("escaped", nil), nil)), cons(requestPart("&&", cons(explicitRequest(lexicalRequest(cons(requestPart("cp", nil), nil)), cons(requestPart("==", cons(numberNode(114), nil)), nil)), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("value", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("value", nil), nil)), cons(requestPart("++", cons(stringNode("\r"), nil)), nil))), nil)), nil)), cons(requestPart("else", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("value", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("value", nil), nil)), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("at", cons(lexicalRequest(cons(requestPart("index", nil), nil)), nil)), nil)), nil)), nil))), nil)), nil)), nil)))))))), cons(assign(lexicalRequest(cons(requestPart("escaped", nil), nil)), lexicalRequest(cons(requestPart("escapeNext", nil), nil))), cons(assign(lexicalRequest(cons(requestPart("index", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("+", cons(numberNode(1), nil)), nil))), nil)))))), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("index", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("+", cons(numberNode(1), nil)), nil))), cons(returnStmt(lexicalRequest(cons(requestPart("StringToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), cons(lexicalRequest(cons(requestPart("value", nil), nil)), nil))), nil))), nil)))))), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(lexicalRequest(cons(requestPart("isDigit", cons(lexicalRequest(cons(requestPart("c", nil), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(defDecl("startIndex", nil, nil, explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("-", cons(numberNode(1), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart(">=", cons(explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("size", nil), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("NumberToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), cons(lexicalRequest(cons(requestPart("c", nil), nil)), nil))), nil))), nil)), nil)), nil))), cons(varDecl("value", nil, nil, cons(stringNode(""), nil)), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("isDigit", cons(lexicalRequest(cons(requestPart("c", nil), nil)), nil)), nil)), cons(requestPart("&&", cons(explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("<=", cons(explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("size", nil), nil)), nil)), nil)), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("value", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("value", nil), nil)), cons(requestPart("++", cons(lexicalRequest(cons(requestPart("c", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("c", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("at", cons(lexicalRequest(cons(requestPart("index", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("index", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("+", cons(numberNode(1), nil)), nil))), nil)))), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart(">", cons(explicitRequest(lexicalRequest(cons(requestPart("startIndex", nil), nil)), cons(requestPart("+", cons(numberNode(1), nil)), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("index", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("-", cons(numberNode(1), nil)), nil))), nil)), nil)), nil))), cons(returnStmt(lexicalRequest(cons(requestPart("NumberToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), cons(lexicalRequest(cons(requestPart("value", nil), nil)), nil))), nil))), nil))))))), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(lexicalRequest(cons(requestPart("isIdentifierStart", cons(lexicalRequest(cons(requestPart("c", nil), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(defDecl("startIndex", nil, nil, explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("-", cons(numberNode(1), nil)), nil))), cons(varDecl("value", nil, nil, cons(lexicalRequest(cons(requestPart("c", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart(">", cons(explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("size", nil), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("IdentifierToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), cons(lexicalRequest(cons(requestPart("value", nil), nil)), nil))), nil))), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("c", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("at", cons(lexicalRequest(cons(requestPart("index", nil), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("isIdentifierStart", cons(lexicalRequest(cons(requestPart("c", nil), nil)), nil)), nil)), cons(requestPart("||", cons(lexicalRequest(cons(requestPart("isDigit", cons(lexicalRequest(cons(requestPart("c", nil), nil)), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("'"), nil)), nil)), nil)), nil)), cons(requestPart("&&", cons(explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("<=", cons(explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("size", nil), nil)), nil)), nil)), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("value", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("value", nil), nil)), cons(requestPart("++", cons(lexicalRequest(cons(requestPart("c", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("index", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("+", cons(numberNode(1), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("<=", cons(explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("size", nil), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("c", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("source", nil), nil)), cons(requestPart("at", cons(lexicalRequest(cons(requestPart("index", nil), nil)), nil)), nil))), nil)), nil)), nil))), nil)))), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("var"), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("def"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("method"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("object"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("is"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("return"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("class"), nil)), nil)), nil)), nil)), cons(requestPart("||", cons(explicitRequest(lexicalRequest(cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("type"), nil)), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("KeywordToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), cons(lexicalRequest(cons(requestPart("value", nil), nil)), nil))), nil))), nil)), nil)), nil))), cons(returnStmt(lexicalRequest(cons(requestPart("IdentifierToken", cons(lexicalRequest(cons(requestPart("location", nil), nil)), cons(lexicalRequest(cons(requestPart("value", nil), nil)), nil))), nil))), nil)))))))), nil)), nil))), cons(lexicalRequest(cons(requestPart("print", cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(stringNode("Unknown character: "), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode("("), nil)), nil)), cons(requestPart("++", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("firstCodepoint", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(") at index "), nil)), nil)), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), nil)), nil)), nil))))))))))))))))))), cons(methodDecl(cons(declarationPart("current", nil), nil), nil, nil, cons(lexicalRequest(cons(requestPart("currentToken", nil), nil)), nil)), cons(methodDecl(cons(declarationPart("advance", nil), nil), nil, nil, cons(assign(lexicalRequest(cons(requestPart("currentToken", nil), nil)), lexicalRequest(cons(requestPart("nextToken", nil), nil))), nil)), cons(methodDecl(cons(declarationPart("expectToken", cons(identifierDeclaration("nature", nil), nil)), nil), nil, nil, cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("!=", cons(lexicalRequest(cons(requestPart("nature", nil), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(lexicalRequest(cons(requestPart("print", cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(stringNode("Expected "), cons(requestPart("++", cons(lexicalRequest(cons(requestPart("nature", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(" but got "), nil)), nil)), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("nature", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(" at "), nil)), nil)), cons(requestPart("++", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("position", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), nil)), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("Exception", nil), nil)), cons(requestPart("raise", cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(stringNode("Expected "), cons(requestPart("++", cons(lexicalRequest(cons(requestPart("nature", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(" but got "), nil)), nil)), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("nature", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(" at "), nil)), nil)), cons(requestPart("++", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("position", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), nil)), nil)), nil))), nil)), nil))), nil)), cons(methodDecl(cons(declarationPart("expectSymbol", cons(identifierDeclaration("nature", nil), nil)), nil), nil, nil, cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("!=", cons(lexicalRequest(cons(requestPart("nature", nil), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(lexicalRequest(cons(requestPart("print", cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(stringNode("Expected "), cons(requestPart("++", cons(lexicalRequest(cons(requestPart("nature", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(" but got "), nil)), nil)), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("nature", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(" at "), nil)), nil)), cons(requestPart("++", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("position", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), nil)), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("Exception", nil), nil)), cons(requestPart("raise", cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(stringNode("Expected "), cons(requestPart("++", cons(lexicalRequest(cons(requestPart("nature", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(" but got "), nil)), nil)), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("nature", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(" at "), nil)), nil)), cons(requestPart("++", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("position", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), nil)), nil)), nil))), nil)), nil))), nil)), cons(methodDecl(cons(declarationPart("expectKeyword", cons(identifierDeclaration("val", nil), nil)), nil), nil, nil, cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("!=", cons(stringNode("KEYWORD"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(lexicalRequest(cons(requestPart("print", cons(explicitRequest(explicitRequest(explicitRequest(stringNode("Expected KEYWORD but got "), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("nature", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(" at "), nil)), nil)), cons(requestPart("++", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("position", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), nil)), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("Exception", nil), nil)), cons(requestPart("raise", cons(explicitRequest(explicitRequest(explicitRequest(stringNode("Expected KEYWORD but got "), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("nature", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(" at "), nil)), nil)), cons(requestPart("++", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("position", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), nil)), nil)), nil))), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("value", nil), nil)), cons(requestPart("!=", cons(lexicalRequest(cons(requestPart("val", nil), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(lexicalRequest(cons(requestPart("print", cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(stringNode("Expected "), cons(requestPart("++", cons(lexicalRequest(cons(requestPart("val", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(" but got "), nil)), nil)), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("value", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(" at "), nil)), nil)), cons(requestPart("++", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("position", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), nil)), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("Exception", nil), nil)), cons(requestPart("raise", cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(explicitRequest(stringNode("Expected "), cons(requestPart("++", cons(lexicalRequest(cons(requestPart("val", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(" but got "), nil)), nil)), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("value", nil), nil)), nil)), nil)), cons(requestPart("++", cons(stringNode(" at "), nil)), nil)), cons(requestPart("++", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("currentToken", nil), nil)), cons(requestPart("position", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), nil)), nil)), nil))), nil)), nil))), nil))), nil))))))))))))), nil)), cons(methodDecl(cons(declarationPart("digitToNumber", cons(identifierDeclaration("c", nil), nil)), nil), nil, nil, cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("1"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(numberNode(1)), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("2"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(numberNode(2)), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("3"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(numberNode(3)), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("4"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(numberNode(4)), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("5"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(numberNode(5)), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("6"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(numberNode(6)), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("7"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(numberNode(7)), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("8"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(numberNode(8)), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("9"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(numberNode(9)), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("==", cons(stringNode("0"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(numberNode(0)), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("print", cons(explicitRequest(stringNode("Unexpected digit: "), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), nil)), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("Exception", nil), nil)), cons(requestPart("raise", cons(explicitRequest(stringNode("Unexpected digit: "), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("c", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), nil)), nil)), nil))))))))))))), cons(methodDecl(cons(declarationPart("escapeString", cons(identifierDeclaration("value", nil), nil)), nil), nil, nil, cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("value", nil), nil)), cons(requestPart("replace", cons(stringNode("\\"), nil)), cons(requestPart("with", cons(stringNode("\\\\"), nil)), nil))), cons(requestPart("replace", cons(stringNode("\""), nil)), cons(requestPart("with", cons(stringNode("\\\""), nil)), nil))), cons(requestPart("replace", cons(stringNode("\n"), nil)), cons(requestPart("with", cons(stringNode("\\n"), nil)), nil))), cons(requestPart("replace", cons(stringNode("\r"), nil)), cons(requestPart("with", cons(stringNode("\\r"), nil)), nil))), nil)), cons(methodDecl(cons(declarationPart("parseNumber", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(defDecl("token", nil, nil, explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(defDecl("s", nil, nil, explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("value", nil), nil))), cons(varDecl("val", nil, nil, cons(numberNode(0), nil)), cons(varDecl("index", nil, nil, cons(numberNode(1), nil)), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("<=", cons(explicitRequest(lexicalRequest(cons(requestPart("s", nil), nil)), cons(requestPart("size", nil), nil)), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("val", nil), nil)), explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("val", nil), nil)), cons(requestPart("*", cons(numberNode(10), nil)), nil)), cons(requestPart("+", cons(lexicalRequest(cons(requestPart("digitToNumber", cons(explicitRequest(lexicalRequest(cons(requestPart("s", nil), nil)), cons(requestPart("at", cons(lexicalRequest(cons(requestPart("index", nil), nil)), nil)), nil)), nil)), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("index", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("index", nil), nil)), cons(requestPart("+", cons(numberNode(1), nil)), nil))), nil))), nil)), nil))), cons(lexicalRequest(cons(requestPart("numberNode", cons(lexicalRequest(cons(requestPart("val", nil), nil)), nil)), nil)), nil)))))))), cons(methodDecl(cons(declarationPart("parseString", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(defDecl("token", nil, nil, explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(lexicalRequest(cons(requestPart("stringNode", cons(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("value", nil), nil)), nil)), nil)), nil)))), cons(methodDecl(cons(declarationPart("parseLexicalRequestNoBlock", cons(identifierDeclaration("lxr", nil), cons(identifierDeclaration("id", nil), nil))), nil), nil, nil, cons(defDecl("parts", nil, nil, lexicalRequest(cons(requestPart("parseRequestParts", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(lexicalRequest(cons(requestPart("false", nil), nil)), nil))), nil))), cons(lexicalRequest(cons(requestPart("lexicalRequest", cons(lexicalRequest(cons(requestPart("parts", nil), nil)), nil)), nil)), nil))), cons(methodDecl(cons(declarationPart("parselexicalRequest", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(defDecl("parts", nil, nil, lexicalRequest(cons(requestPart("parseRequestParts", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(lexicalRequest(cons(requestPart("true", nil), nil)), nil))), nil))), cons(lexicalRequest(cons(requestPart("lexicalRequest", cons(lexicalRequest(cons(requestPart("parts", nil), nil)), nil)), nil)), nil))), cons(methodDecl(cons(declarationPart("parseRequestParts", cons(identifierDeclaration("lxr", nil), cons(identifierDeclaration("allowBlock", nil), nil))), nil), nil, nil, cons(varDecl("parts", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("IDENTIFIER"), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(varDecl("id", nil, nil, cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("value", nil), nil)), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("LPAREN"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(varDecl("args", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("!=", cons(stringNode("RPAREN"), nil)), nil)), cons(requestPart("&&", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("!=", cons(stringNode("EOF"), nil)), nil)), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("args", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("parseExpression", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil)), cons(lexicalRequest(cons(requestPart("args", nil), nil)), nil))), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("COMMA"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), nil)), nil)), nil))), nil))), nil)), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(defDecl("part", nil, nil, lexicalRequest(cons(requestPart("requestPart", cons(lexicalRequest(cons(requestPart("id", nil), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("args", nil), nil)), cons(requestPart("reversed", cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), nil)), nil))), nil))), cons(assign(lexicalRequest(cons(requestPart("parts", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("part", nil), nil)), cons(lexicalRequest(cons(requestPart("parts", nil), nil)), nil))), nil))), nil))))))), nil)), cons(requestPart("elseif", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("allowBlock", nil), nil)), cons(requestPart("&&", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("LBRACE"), nil)), nil)), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(defDecl("blk", nil, nil, lexicalRequest(cons(requestPart("parseBlock", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(defDecl("part", nil, nil, lexicalRequest(cons(requestPart("requestPart", cons(lexicalRequest(cons(requestPart("id", nil), nil)), cons(lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("blk", nil), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil))), nil)), nil))), nil))), cons(assign(lexicalRequest(cons(requestPart("parts", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("part", nil), nil)), cons(lexicalRequest(cons(requestPart("parts", nil), nil)), nil))), nil))), nil)))), nil)), cons(requestPart("elseif", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("NUMBER"), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(defDecl("num", nil, nil, lexicalRequest(cons(requestPart("parseNumber", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(defDecl("part", nil, nil, lexicalRequest(cons(requestPart("requestPart", cons(lexicalRequest(cons(requestPart("id", nil), nil)), cons(lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("num", nil), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil))), nil)), nil))), nil))), cons(assign(lexicalRequest(cons(requestPart("parts", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("part", nil), nil)), cons(lexicalRequest(cons(requestPart("parts", nil), nil)), nil))), nil))), nil)))), nil)), cons(requestPart("elseif", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("STRING"), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(defDecl("str", nil, nil, lexicalRequest(cons(requestPart("parseString", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(defDecl("part", nil, nil, lexicalRequest(cons(requestPart("requestPart", cons(lexicalRequest(cons(requestPart("id", nil), nil)), cons(lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("str", nil), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil))), nil)), nil))), nil))), cons(assign(lexicalRequest(cons(requestPart("parts", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("part", nil), nil)), cons(lexicalRequest(cons(requestPart("parts", nil), nil)), nil))), nil))), nil)))), nil)), cons(requestPart("else", cons(block(nil, cons(defDecl("part", nil, nil, lexicalRequest(cons(requestPart("requestPart", cons(lexicalRequest(cons(requestPart("id", nil), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil))), nil))), cons(assign(lexicalRequest(cons(requestPart("parts", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("part", nil), nil)), cons(lexicalRequest(cons(requestPart("parts", nil), nil)), nil))), nil))), cons(returnStmt(explicitRequest(lexicalRequest(cons(requestPart("parts", nil), nil)), cons(requestPart("reversed", cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), nil))), nil)))), nil)), nil)))))))))), nil)))), nil)), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("parts", nil), nil)), cons(requestPart("reversed", cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), nil)), nil)))), cons(methodDecl(cons(declarationPart("parseExplicitRequestNoBlock", cons(identifierDeclaration("receiver", nil), cons(identifierDeclaration("lxr", nil), nil))), nil), nil, nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(defDecl("pos", nil, nil, explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("asString", nil), nil))), cons(defDecl("parts", nil, nil, lexicalRequest(cons(requestPart("parseRequestParts", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(lexicalRequest(cons(requestPart("false", nil), nil)), nil))), nil))), cons(lexicalRequest(cons(requestPart("explicitRequest", cons(lexicalRequest(cons(requestPart("pos", nil), nil)), cons(lexicalRequest(cons(requestPart("receiver", nil), nil)), cons(lexicalRequest(cons(requestPart("parts", nil), nil)), nil)))), nil)), nil))))), cons(methodDecl(cons(declarationPart("parseExplicitRequest", cons(identifierDeclaration("receiver", nil), cons(identifierDeclaration("lxr", nil), nil))), nil), nil, nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(defDecl("pos", nil, nil, explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("asString", nil), nil))), cons(defDecl("parts", nil, nil, lexicalRequest(cons(requestPart("parseRequestParts", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(lexicalRequest(cons(requestPart("true", nil), nil)), nil))), nil))), cons(lexicalRequest(cons(requestPart("explicitRequest", cons(lexicalRequest(cons(requestPart("pos", nil), nil)), cons(lexicalRequest(cons(requestPart("receiver", nil), nil)), cons(lexicalRequest(cons(requestPart("parts", nil), nil)), nil)))), nil)), nil))))), cons(methodDecl(cons(declarationPart("parseTypeExpression", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(defDecl("token", nil, nil, explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("IDENTIFIER"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("parseLexicalRequestNoBlock", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("value", nil), nil)), nil))), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("print", cons(explicitRequest(stringNode("Unexpected token: "), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), nil)), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("Exception", nil), nil)), cons(requestPart("raise", cons(explicitRequest(stringNode("Unexpected token: "), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), nil)), nil)), nil))))), cons(methodDecl(cons(declarationPart("parseExpressionNoOpNoDot", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(defDecl("token", nil, nil, explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("NUMBER"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("parseNumber", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("STRING"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("parseString", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("LPAREN"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(defDecl("expr", nil, nil, lexicalRequest(cons(requestPart("parseExpression", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(returnStmt(lexicalRequest(cons(requestPart("expr", nil), nil))), nil))))), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("LBRACE"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("parseBlock", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("IDENTIFIER"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("parselexicalRequest", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("KEYWORD"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("object"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("parseObject", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), nil)), nil)), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("OPERATOR"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(defDecl("pos", nil, nil, explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("asString", nil), nil))), cons(defDecl("expr", nil, nil, lexicalRequest(cons(requestPart("parseExpressionNoOp", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(returnStmt(lexicalRequest(cons(requestPart("explicitRequest", cons(lexicalRequest(cons(requestPart("pos", nil), nil)), cons(lexicalRequest(cons(requestPart("expr", nil), nil)), cons(lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("requestPart", cons(explicitRequest(stringNode("prefix"), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("value", nil), nil)), nil)), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil))), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil))), nil)), nil)))), nil))), nil))))), nil)), nil))), cons(lexicalRequest(cons(requestPart("print", cons(explicitRequest(stringNode("Unexpected token: "), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), nil)), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("Exception", nil), nil)), cons(requestPart("raise", cons(explicitRequest(stringNode("Unexpected token: "), cons(requestPart("++", cons(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("asString", nil), nil)), nil)), nil)), nil)), nil)), nil))))))))))), cons(methodDecl(cons(declarationPart("parseExpressionNoOp", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(varDecl("left", nil, nil, cons(lexicalRequest(cons(requestPart("parseExpressionNoOpNoDot", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil)), nil)), cons(varDecl("token", nil, nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("DOT"), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("left", nil), nil)), lexicalRequest(cons(requestPart("parseExplicitRequest", cons(lexicalRequest(cons(requestPart("left", nil), nil)), cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil))), nil))), cons(assign(lexicalRequest(cons(requestPart("token", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil))), nil))), nil)), nil))), cons(returnStmt(lexicalRequest(cons(requestPart("left", nil), nil))), nil))))), cons(methodDecl(cons(declarationPart("parseExpression", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(varDecl("left", nil, nil, cons(lexicalRequest(cons(requestPart("parseExpressionNoOp", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil)), nil)), cons(varDecl("token", nil, nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("OPERATOR"), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(defDecl("pos", nil, nil, explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("asString", nil), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(defDecl("right", nil, nil, lexicalRequest(cons(requestPart("parseExpressionNoOp", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(defDecl("args", nil, nil, lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("right", nil), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil))), nil))), cons(defDecl("part", nil, nil, lexicalRequest(cons(requestPart("requestPart", cons(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("value", nil), nil)), cons(lexicalRequest(cons(requestPart("args", nil), nil)), nil))), nil))), cons(defDecl("parts", nil, nil, lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("part", nil), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil))), nil))), cons(defDecl("req", nil, nil, lexicalRequest(cons(requestPart("explicitRequest", cons(lexicalRequest(cons(requestPart("pos", nil), nil)), cons(lexicalRequest(cons(requestPart("left", nil), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("parts", nil), nil)), cons(requestPart("reversed", cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), nil)), nil)))), nil))), cons(assign(lexicalRequest(cons(requestPart("left", nil), nil)), lexicalRequest(cons(requestPart("req", nil), nil))), cons(assign(lexicalRequest(cons(requestPart("token", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil))), nil)))))))))), nil)), nil))), cons(returnStmt(lexicalRequest(cons(requestPart("left", nil), nil))), nil))))), cons(methodDecl(cons(declarationPart("parseReturnStatement", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(defDecl("val", nil, nil, lexicalRequest(cons(requestPart("parseExpression", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("returnStmt", cons(lexicalRequest(cons(requestPart("val", nil), nil)), nil)), nil)), nil)))), cons(methodDecl(cons(declarationPart("parseStatement", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(defDecl("token", nil, nil, explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("KEYWORD"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("return"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("parseReturnStatement", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("var"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("parseVarDeclaration", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("def"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(returnStmt(lexicalRequest(cons(requestPart("parseDefDeclaration", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), nil)), nil)), nil))), nil)))), nil)), cons(requestPart("elseif", cons(block(nil, cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("COMMENT"), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(returnStmt(lexicalRequest(cons(requestPart("comment", cons(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("value", nil), nil)), nil)), nil))), nil))), nil)), nil))))), cons(varDecl("exp", nil, nil, cons(lexicalRequest(cons(requestPart("parseExpression", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil)), nil)), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("ASSIGN"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(defDecl("val", nil, nil, lexicalRequest(cons(requestPart("parseExpression", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("exp", nil), nil)), lexicalRequest(cons(requestPart("assign", cons(lexicalRequest(cons(requestPart("exp", nil), nil)), cons(lexicalRequest(cons(requestPart("val", nil), nil)), nil))), nil))), nil)))), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("NEWLINE"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("exp", nil), nil)), nil))))))), cons(methodDecl(cons(declarationPart("parseBlock", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(varDecl("params", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(varDecl("body", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("LBRACE"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("NEWLINE"), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("!=", cons(stringNode("RBRACE"), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("ARROW"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(assign(lexicalRequest(cons(requestPart("params", nil), nil)), lexicalRequest(cons(requestPart("body", nil), nil))), cons(assign(lexicalRequest(cons(requestPart("body", nil), nil)), lexicalRequest(cons(requestPart("nil", nil), nil))), nil)))), nil)), cons(requestPart("else", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("body", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("parseStatement", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil)), cons(lexicalRequest(cons(requestPart("body", nil), nil)), nil))), nil))), nil)), nil)), nil)))), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("NEWLINE"), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), nil)), nil)), nil))), nil))), nil)), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), nil))))), nil)), nil))), cons(lexicalRequest(cons(requestPart("block", cons(lexicalRequest(cons(requestPart("params", nil), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("body", nil), nil)), cons(requestPart("reversed", cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), nil)), nil))), nil)), nil))))), cons(methodDecl(cons(declarationPart("parseAnnotations", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(varDecl("anns", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("IDENTIFIER"), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("anns", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("value", nil), nil)), cons(lexicalRequest(cons(requestPart("anns", nil), nil)), nil))), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("COMMA"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), nil)), nil)), nil))), nil)))), nil)), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("anns", nil), nil)), cons(requestPart("reversed", cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), nil)), nil))))), cons(methodDecl(cons(declarationPart("parseDefDeclaration", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(defDecl("name", nil, nil, explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("value", nil), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(varDecl("dtype", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("COLON"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(comment(" Type annotation"), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(assign(lexicalRequest(cons(requestPart("dtype", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("parseExpression", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil))), nil))), nil)))), nil)), nil))), cons(varDecl("anns", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("KEYWORD"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("is"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("anns", nil), nil)), lexicalRequest(cons(requestPart("parseAnnotations", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), nil)), nil)), nil))), nil)), nil)), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(defDecl("val", nil, nil, lexicalRequest(cons(requestPart("parseExpression", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("defDecl", cons(lexicalRequest(cons(requestPart("name", nil), nil)), cons(lexicalRequest(cons(requestPart("dtype", nil), nil)), cons(lexicalRequest(cons(requestPart("anns", nil), nil)), cons(lexicalRequest(cons(requestPart("val", nil), nil)), nil))))), nil)), nil))))))))))), cons(methodDecl(cons(declarationPart("parseVarDeclaration", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(defDecl("name", nil, nil, explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("value", nil), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(varDecl("dtype", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("COLON"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(comment(" Type annotation"), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(assign(lexicalRequest(cons(requestPart("dtype", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("parseExpression", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil))), nil))), nil)))), nil)), nil))), cons(varDecl("anns", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("KEYWORD"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("is"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("anns", nil), nil)), lexicalRequest(cons(requestPart("parseAnnotations", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), nil)), nil)), nil))), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("ASSIGN"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(defDecl("val", nil, nil, lexicalRequest(cons(requestPart("parseExpression", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("varDecl", cons(lexicalRequest(cons(requestPart("name", nil), nil)), cons(lexicalRequest(cons(requestPart("dtype", nil), nil)), cons(lexicalRequest(cons(requestPart("anns", nil), nil)), cons(lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("val", nil), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil))), nil)), nil))))), nil)), nil)))), nil)), cons(requestPart("else", cons(block(nil, cons(lexicalRequest(cons(requestPart("varDecl", cons(lexicalRequest(cons(requestPart("name", nil), nil)), cons(lexicalRequest(cons(requestPart("dtype", nil), nil)), cons(lexicalRequest(cons(requestPart("anns", nil), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil))))), nil)), nil)), nil)), nil)))), nil))))))))), cons(methodDecl(cons(declarationPart("parseMethodBody", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(varDecl("body", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("!=", cons(stringNode("RBRACE"), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("NEWLINE"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), nil)), nil)), cons(requestPart("elseif", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("KEYWORD"), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("var"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(defDecl("dec", nil, nil, lexicalRequest(cons(requestPart("parseVarDeclaration", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("body", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("dec", nil), nil)), cons(lexicalRequest(cons(requestPart("body", nil), nil)), nil))), nil))), nil))), nil)), cons(requestPart("elseif", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("def"), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(defDecl("dec", nil, nil, lexicalRequest(cons(requestPart("parseDefDeclaration", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("body", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("dec", nil), nil)), cons(lexicalRequest(cons(requestPart("body", nil), nil)), nil))), nil))), nil))), nil)), cons(requestPart("else", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("body", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("parseStatement", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil)), cons(lexicalRequest(cons(requestPart("body", nil), nil)), nil))), nil))), nil)), nil)), nil)))))), nil)), nil)), cons(requestPart("else", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("body", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("parseStatement", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil)), cons(lexicalRequest(cons(requestPart("body", nil), nil)), nil))), nil))), nil)), nil)), nil)))))), nil)), nil)), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("body", nil), nil)), cons(requestPart("reversed", cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), nil)), nil)))))), cons(methodDecl(cons(declarationPart("parseMethodDeclaration", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(varDecl("parts", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("IDENTIFIER"), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(defDecl("id", nil, nil, explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("value", nil), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("LPAREN"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(varDecl("args", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("!=", cons(stringNode("RPAREN"), nil)), nil)), cons(requestPart("&&", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("!=", cons(stringNode("EOF"), nil)), nil)), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("expectToken", cons(stringNode("IDENTIFIER"), nil)), nil)), cons(defDecl("idToken", nil, nil, explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil))), cons(varDecl("dtype", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("COLON"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(comment(" Type annotation"), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(assign(lexicalRequest(cons(requestPart("dtype", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("parseTypeExpression", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil))), nil))), nil)))), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("args", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("identifierDeclaration", cons(explicitRequest(lexicalRequest(cons(requestPart("idToken", nil), nil)), cons(requestPart("value", nil), nil)), cons(lexicalRequest(cons(requestPart("dtype", nil), nil)), nil))), nil)), cons(lexicalRequest(cons(requestPart("args", nil), nil)), nil))), nil))), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("COMMA"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), nil)), nil)), nil))), nil)))))))), nil)), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(defDecl("part", nil, nil, lexicalRequest(cons(requestPart("declarationPart", cons(lexicalRequest(cons(requestPart("id", nil), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("args", nil), nil)), cons(requestPart("reversed", cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), nil)), nil))), nil))), cons(assign(lexicalRequest(cons(requestPart("parts", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("part", nil), nil)), cons(lexicalRequest(cons(requestPart("parts", nil), nil)), nil))), nil))), nil))))))), nil)), cons(requestPart("else", cons(block(nil, cons(defDecl("part", nil, nil, lexicalRequest(cons(requestPart("declarationPart", cons(lexicalRequest(cons(requestPart("id", nil), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil))), nil))), cons(assign(lexicalRequest(cons(requestPart("parts", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("part", nil), nil)), cons(lexicalRequest(cons(requestPart("parts", nil), nil)), nil))), nil))), nil))), nil)), nil)))), nil)))), nil)), nil))), cons(varDecl("dtype", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("ARROW"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(comment(" Type annotation"), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(assign(lexicalRequest(cons(requestPart("dtype", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("parseTypeExpression", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil))), nil))), nil)))), nil)), nil))), cons(varDecl("anns", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("KEYWORD"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("is"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("anns", nil), nil)), lexicalRequest(cons(requestPart("parseAnnotations", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), nil)), nil)), nil))), nil)), nil)), nil))), cons(comment("lxr.advance"), cons(defDecl("body", nil, nil, lexicalRequest(cons(requestPart("parseMethodBody", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("methodDecl", cons(explicitRequest(lexicalRequest(cons(requestPart("parts", nil), nil)), cons(requestPart("reversed", cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), nil)), cons(lexicalRequest(cons(requestPart("dtype", nil), nil)), cons(lexicalRequest(cons(requestPart("anns", nil), nil)), cons(lexicalRequest(cons(requestPart("body", nil), nil)), nil))))), nil)), nil))))))))))), cons(methodDecl(cons(declarationPart("parseClassDeclaration", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(varDecl("parts", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("IDENTIFIER"), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(defDecl("id", nil, nil, explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("value", nil), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("LPAREN"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(varDecl("args", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("!=", cons(stringNode("RPAREN"), nil)), nil)), cons(requestPart("&&", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("!=", cons(stringNode("EOF"), nil)), nil)), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(assign(lexicalRequest(cons(requestPart("args", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("identifierDeclaration", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("value", nil), nil)), nil)), nil)), cons(lexicalRequest(cons(requestPart("args", nil), nil)), nil))), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("COMMA"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), nil)), nil)), nil))), nil)))), nil)), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(defDecl("part", nil, nil, lexicalRequest(cons(requestPart("declarationPart", cons(lexicalRequest(cons(requestPart("id", nil), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("args", nil), nil)), cons(requestPart("reversed", cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), nil)), nil))), nil))), cons(assign(lexicalRequest(cons(requestPart("parts", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("part", nil), nil)), cons(lexicalRequest(cons(requestPart("parts", nil), nil)), nil))), nil))), nil))))))), nil)), cons(requestPart("else", cons(block(nil, cons(defDecl("part", nil, nil, lexicalRequest(cons(requestPart("declarationPart", cons(lexicalRequest(cons(requestPart("id", nil), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil))), nil))), cons(assign(lexicalRequest(cons(requestPart("parts", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("part", nil), nil)), cons(lexicalRequest(cons(requestPart("parts", nil), nil)), nil))), nil))), nil))), nil)), nil)))), nil)))), nil)), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(defDecl("body", nil, nil, lexicalRequest(cons(requestPart("parseObjectBody", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(defDecl("obj", nil, nil, lexicalRequest(cons(requestPart("objectConstructor", cons(lexicalRequest(cons(requestPart("body", nil), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("methodDecl", cons(explicitRequest(lexicalRequest(cons(requestPart("parts", nil), nil)), cons(requestPart("reversed", cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), cons(lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("obj", nil), nil)), cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil))), nil)), nil))))), nil)), nil)))))))), cons(methodDecl(cons(declarationPart("parseObjectBody", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(varDecl("body", nil, nil, cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), cons(varDecl("token", nil, nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil)), nil)), cons(lexicalRequest(cons(requestPart("while", cons(block(nil, cons(explicitRequest(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("!=", cons(stringNode("EOF"), nil)), nil)), cons(requestPart("&&", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("!=", cons(stringNode("RBRACE"), nil)), nil)), nil)), nil)), nil)), nil)), cons(requestPart("do", cons(block(nil, cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("NEWLINE"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), nil)), nil)), cons(requestPart("elseif", cons(block(nil, cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("nature", nil), nil)), cons(requestPart("==", cons(stringNode("KEYWORD"), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(lexicalRequest(cons(requestPart("if", cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("var"), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(defDecl("dec", nil, nil, lexicalRequest(cons(requestPart("parseVarDeclaration", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("body", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("dec", nil), nil)), cons(lexicalRequest(cons(requestPart("body", nil), nil)), nil))), nil))), nil))), nil)), cons(requestPart("elseif", cons(block(nil, cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("def"), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(defDecl("dec", nil, nil, lexicalRequest(cons(requestPart("parseDefDeclaration", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("body", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("dec", nil), nil)), cons(lexicalRequest(cons(requestPart("body", nil), nil)), nil))), nil))), nil))), nil)), cons(requestPart("elseif", cons(block(nil, cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("method"), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(defDecl("dec", nil, nil, lexicalRequest(cons(requestPart("parseMethodDeclaration", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("body", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("dec", nil), nil)), cons(lexicalRequest(cons(requestPart("body", nil), nil)), nil))), nil))), nil))), nil)), cons(requestPart("elseif", cons(block(nil, cons(explicitRequest(explicitRequest(lexicalRequest(cons(requestPart("token", nil), nil)), cons(requestPart("value", nil), nil)), cons(requestPart("==", cons(stringNode("class"), nil)), nil)), nil)), nil)), cons(requestPart("then", cons(block(nil, cons(defDecl("dec", nil, nil, lexicalRequest(cons(requestPart("parseClassDeclaration", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("body", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("dec", nil), nil)), cons(lexicalRequest(cons(requestPart("body", nil), nil)), nil))), nil))), nil))), nil)), cons(requestPart("else", cons(block(nil, cons(defDecl("stmt", nil, nil, lexicalRequest(cons(requestPart("parseStatement", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("body", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("stmt", nil), nil)), cons(lexicalRequest(cons(requestPart("body", nil), nil)), nil))), nil))), nil))), nil)), nil)))))))))), nil)), nil)), cons(requestPart("else", cons(block(nil, cons(defDecl("stmt", nil, nil, lexicalRequest(cons(requestPart("parseStatement", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(assign(lexicalRequest(cons(requestPart("body", nil), nil)), lexicalRequest(cons(requestPart("cons", cons(lexicalRequest(cons(requestPart("stmt", nil), nil)), cons(lexicalRequest(cons(requestPart("body", nil), nil)), nil))), nil))), nil))), nil)), nil)))))), cons(assign(lexicalRequest(cons(requestPart("token", nil), nil)), explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("current", nil), nil))), nil))), nil)), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("body", nil), nil)), cons(requestPart("reversed", cons(lexicalRequest(cons(requestPart("nil", nil), nil)), nil)), nil)), nil))))), cons(methodDecl(cons(declarationPart("parseObject", cons(identifierDeclaration("lxr", nil), nil)), nil), nil, nil, cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(defDecl("body", nil, nil, lexicalRequest(cons(requestPart("parseObjectBody", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(explicitRequest(lexicalRequest(cons(requestPart("lxr", nil), nil)), cons(requestPart("advance", nil), nil)), cons(lexicalRequest(cons(requestPart("objectConstructor", cons(lexicalRequest(cons(requestPart("body", nil), nil)), nil)), nil)), nil)))))), cons(methodDecl(cons(declarationPart("parse", cons(identifierDeclaration("code", nil), nil)), nil), nil, nil, cons(defDecl("lxr", nil, nil, lexicalRequest(cons(requestPart("lexer", cons(lexicalRequest(cons(requestPart("code", nil), nil)), nil)), nil))), cons(defDecl("body", nil, nil, lexicalRequest(cons(requestPart("parseObjectBody", cons(lexicalRequest(cons(requestPart("lxr", nil), nil)), nil)), nil))), cons(lexicalRequest(cons(requestPart("objectConstructor", cons(lexicalRequest(cons(requestPart("body", nil), nil)), nil)), nil)), nil)))), nil)))))))))))))))))))))))))))))))))))))))))))))))))
;
}
