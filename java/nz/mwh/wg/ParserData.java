package nz.mwh.wg;

import nz.mwh.wg.ast.ASTNode;

public class ParserData extends ASTConstructors {
    @SuppressWarnings("unchecked")
    public static final ASTNode program = objCons(cons(importStmt("ast", identifierDeclaration("ast", no)), cons(methDec(one(part("EOFToken", cons(identifierDeclaration("line", no), one(identifierDeclaration("column", no))))), no, no, one(lexReq(one(part("SymbolToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(strLit("EOF"))))))))), cons(methDec(one(part("NumberToken", cons(identifierDeclaration("ln", no), cons(identifierDeclaration("col", no), one(identifierDeclaration("val", no)))))), no, no, one(objCons(cons(defDec("nature", no, one("public"), strLit("NUMBER")), cons(defDec("value", no, one("public"), lexReq(one(part("val", no)))), cons(defDec("line", no, one("public"), lexReq(one(part("ln", no)))), cons(defDec("column", no, one("public"), lexReq(one(part("col", no)))), one(methDec(one(part("asString", no)), no, no, one(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("nature", no))), one(part("++", one(strLit("("))))), one(part("++", one(lexReq(one(part("value", no))))))), one(part("++", one(strLit(")["))))), one(part("++", one(lexReq(one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(lexReq(one(part("column", no))))))), one(part("++", one(strLit("]")))))))))))), no))), cons(methDec(one(part("LParenToken", cons(identifierDeclaration("line", no), one(identifierDeclaration("column", no))))), no, no, one(lexReq(one(part("SymbolToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(strLit("LPAREN"))))))))), cons(methDec(one(part("RParenToken", cons(identifierDeclaration("line", no), one(identifierDeclaration("column", no))))), no, no, one(lexReq(one(part("SymbolToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(strLit("RPAREN"))))))))), cons(methDec(one(part("LBraceToken", cons(identifierDeclaration("line", no), one(identifierDeclaration("column", no))))), no, no, one(lexReq(one(part("SymbolToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(strLit("LBRACE"))))))))), cons(methDec(one(part("RBraceToken", cons(identifierDeclaration("ln", no), cons(identifierDeclaration("col", no), one(identifierDeclaration("idx", no)))))), no, no, one(objCons(cons(defDec("nature", no, one("public"), strLit("RBRACE")), cons(defDec("line", no, one("public"), lexReq(one(part("ln", no)))), cons(defDec("column", no, one("public"), lexReq(one(part("col", no)))), cons(defDec("index", no, one("public"), lexReq(one(part("idx", no)))), one(methDec(one(part("asString", no)), no, no, one(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(strLit("RBRACE["), one(part("++", one(lexReq(one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(lexReq(one(part("column", no))))))), one(part("++", one(strLit(safeStr("", charAt, "")))))), one(part("++", one(lexReq(one(part("index", no))))))), one(part("++", one(strLit("]")))))))))))), no))), cons(methDec(one(part("CommaToken", cons(identifierDeclaration("line", no), one(identifierDeclaration("column", no))))), no, no, one(lexReq(one(part("SymbolToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(strLit("COMMA"))))))))), cons(methDec(one(part("DotToken", cons(identifierDeclaration("line", no), one(identifierDeclaration("column", no))))), no, no, one(lexReq(one(part("SymbolToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(strLit("DOT"))))))))), cons(methDec(one(part("IdentifierToken", cons(identifierDeclaration("ln", no), cons(identifierDeclaration("col", no), one(identifierDeclaration("val", no)))))), no, no, one(objCons(cons(defDec("nature", no, one("public"), strLit("IDENTIFIER")), cons(defDec("value", no, one("public"), lexReq(one(part("val", no)))), cons(defDec("line", no, one("public"), lexReq(one(part("ln", no)))), cons(defDec("column", no, one("public"), lexReq(one(part("col", no)))), one(methDec(one(part("asString", no)), no, no, one(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("nature", no))), one(part("++", one(strLit("("))))), one(part("++", one(lexReq(one(part("value", no))))))), one(part("++", one(strLit(")["))))), one(part("++", one(lexReq(one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(lexReq(one(part("column", no))))))), one(part("++", one(strLit("]")))))))))))), no))), cons(methDec(one(part("KeywordToken", cons(identifierDeclaration("ln", no), cons(identifierDeclaration("col", no), one(identifierDeclaration("val", no)))))), no, no, one(objCons(cons(defDec("nature", no, one("public"), strLit("KEYWORD")), cons(defDec("value", no, one("public"), lexReq(one(part("val", no)))), cons(defDec("line", no, one("public"), lexReq(one(part("ln", no)))), cons(defDec("column", no, one("public"), lexReq(one(part("col", no)))), one(methDec(one(part("asString", no)), no, no, one(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("nature", no))), one(part("++", one(strLit("("))))), one(part("++", one(lexReq(one(part("value", no))))))), one(part("++", one(strLit(")"))))), one(part("++", one(strLit("["))))), one(part("++", one(lexReq(one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(lexReq(one(part("column", no))))))), one(part("++", one(strLit("]")))))))))))), no))), cons(methDec(one(part("OperatorToken", cons(identifierDeclaration("ln", no), cons(identifierDeclaration("col", no), one(identifierDeclaration("val", no)))))), no, no, one(objCons(cons(defDec("nature", no, one("public"), strLit("OPERATOR")), cons(defDec("value", no, one("public"), lexReq(one(part("val", no)))), cons(defDec("line", no, one("public"), lexReq(one(part("ln", no)))), cons(defDec("column", no, one("public"), lexReq(one(part("col", no)))), one(methDec(one(part("asString", no)), no, no, one(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("nature", no))), one(part("++", one(strLit("("))))), one(part("++", one(lexReq(one(part("value", no))))))), one(part("++", one(strLit(")"))))), one(part("++", one(strLit("["))))), one(part("++", one(lexReq(one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(lexReq(one(part("column", no))))))), one(part("++", one(strLit("]")))))))))))), no))), cons(methDec(one(part("StringToken", cons(identifierDeclaration("ln", no), cons(identifierDeclaration("col", no), one(identifierDeclaration("val", no)))))), no, no, one(objCons(cons(defDec("nature", no, one("public"), strLit("STRING")), cons(defDec("value", no, one("public"), lexReq(one(part("val", no)))), cons(defDec("line", no, one("public"), lexReq(one(part("ln", no)))), cons(defDec("column", no, one("public"), lexReq(one(part("col", no)))), one(methDec(one(part("asString", no)), no, no, one(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("nature", no))), one(part("++", one(strLit("("))))), one(part("++", one(lexReq(one(part("value", no))))))), one(part("++", one(strLit(")"))))), one(part("++", one(strLit("["))))), one(part("++", one(lexReq(one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(lexReq(one(part("column", no))))))), one(part("++", one(strLit("]")))))))))))), no))), cons(methDec(one(part("InterpStringToken", cons(identifierDeclaration("ln", no), cons(identifierDeclaration("col", no), one(identifierDeclaration("val", no)))))), no, no, one(objCons(cons(defDec("nature", no, one("public"), strLit("INTERPSTRING")), cons(defDec("value", no, one("public"), lexReq(one(part("val", no)))), cons(defDec("line", no, one("public"), lexReq(one(part("ln", no)))), cons(defDec("column", no, one("public"), lexReq(one(part("col", no)))), one(methDec(one(part("asString", no)), no, no, one(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("nature", no))), one(part("++", one(strLit("("))))), one(part("++", one(lexReq(one(part("value", no))))))), one(part("++", one(strLit(")"))))), one(part("++", one(strLit("["))))), one(part("++", one(lexReq(one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(lexReq(one(part("column", no))))))), one(part("++", one(strLit("]")))))))))))), no))), cons(methDec(one(part("EqualsToken", cons(identifierDeclaration("line", no), one(identifierDeclaration("column", no))))), no, no, one(lexReq(one(part("SymbolToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(strLit("EQUALS"))))))))), cons(methDec(one(part("AssignToken", cons(identifierDeclaration("line", no), one(identifierDeclaration("column", no))))), no, no, one(lexReq(one(part("SymbolToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(strLit("ASSIGN"))))))))), cons(methDec(one(part("ArrowToken", cons(identifierDeclaration("line", no), one(identifierDeclaration("column", no))))), no, no, one(lexReq(one(part("SymbolToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(strLit("ARROW"))))))))), cons(methDec(one(part("SymbolToken", cons(identifierDeclaration("ln", no), cons(identifierDeclaration("col", no), one(identifierDeclaration("nat", no)))))), no, no, one(objCons(cons(defDec("nature", no, one("public"), lexReq(one(part("nat", no)))), cons(defDec("line", no, one("public"), lexReq(one(part("ln", no)))), cons(defDec("column", no, one("public"), lexReq(one(part("col", no)))), one(methDec(one(part("asString", no)), no, no, one(dotReq(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("nature", no))), one(part("++", one(strLit("["))))), one(part("++", one(lexReq(one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(lexReq(one(part("column", no))))))), one(part("++", one(strLit("]"))))))))))), no))), cons(methDec(one(part("NewlineToken", cons(identifierDeclaration("line", no), one(identifierDeclaration("column", no))))), no, no, one(lexReq(one(part("SymbolToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(strLit("NEWLINE"))))))))), cons(methDec(one(part("CommentToken", cons(identifierDeclaration("ln", no), cons(identifierDeclaration("col", no), one(identifierDeclaration("text", no)))))), no, no, one(objCons(cons(defDec("nature", no, one("public"), strLit("COMMENT")), cons(defDec("line", no, one("public"), lexReq(one(part("ln", no)))), cons(defDec("column", no, one("public"), lexReq(one(part("col", no)))), cons(defDec("value", no, one("public"), lexReq(one(part("text", no)))), one(methDec(one(part("asString", no)), no, no, one(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("nature", no))), one(part("++", one(strLit("("))))), one(part("++", one(lexReq(one(part("value", no))))))), one(part("++", one(strLit(")["))))), one(part("++", one(lexReq(one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(lexReq(one(part("column", no))))))), one(part("++", one(strLit("]")))))))))))), no))), cons(methDec(one(part("isOperatorCharacter", one(identifierDeclaration("c", no)))), no, no, one(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("+"))))), one(part("||", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("-"))))))))), one(part("||", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit(safeStr("", charStar, "")))))))))), one(part("||", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("/"))))))))), one(part("||", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("="))))))))), one(part("||", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit(":"))))))))), one(part("||", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("|"))))))))), one(part("||", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit(safeStr("", charAmp, "")))))))))), one(part("||", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("!"))))))))), one(part("||", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit(">"))))))))), one(part("||", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("<"))))))))), one(part("||", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("."))))))))))), cons(methDec(one(part("isIdentifierStart", one(identifierDeclaration("c", no)))), no, no, cons(defDec("cp", no, no, dotReq(lexReq(one(part("c", no))), one(part("firstCodepoint", no)))), one(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("cp", no))), one(part(">=", one(numLit(97))))), one(part("&&", one(dotReq(lexReq(one(part("cp", no))), one(part("<=", one(numLit(122))))))))), one(part("||", one(dotReq(dotReq(lexReq(one(part("cp", no))), one(part(">=", one(numLit(65))))), one(part("&&", one(dotReq(lexReq(one(part("cp", no))), one(part("<=", one(numLit(90))))))))))))), one(part("||", one(dotReq(lexReq(one(part("cp", no))), one(part("==", one(numLit(95)))))))))))), cons(methDec(one(part("isDigit", one(identifierDeclaration("c", no)))), no, no, cons(defDec("cp", no, no, dotReq(lexReq(one(part("c", no))), one(part("firstCodepoint", no)))), one(dotReq(dotReq(lexReq(one(part("cp", no))), one(part(">=", one(numLit(48))))), one(part("&&", one(dotReq(lexReq(one(part("cp", no))), one(part("<=", one(numLit(57)))))))))))), cons(methDec(one(part("ErrorToken", cons(identifierDeclaration("ln", no), cons(identifierDeclaration("col", no), one(identifierDeclaration("val", no)))))), no, no, one(objCons(cons(defDec("nature", no, one("public"), strLit("ERROR")), cons(defDec("message", no, one("public"), lexReq(one(part("val", no)))), cons(defDec("line", no, one("public"), lexReq(one(part("ln", no)))), cons(defDec("column", no, one("public"), lexReq(one(part("col", no)))), one(methDec(one(part("asString", no)), no, no, one(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("nature", no))), one(part("++", one(strLit("("))))), one(part("++", one(lexReq(one(part("value", no))))))), one(part("++", one(strLit(")["))))), one(part("++", one(lexReq(one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(lexReq(one(part("column", no))))))), one(part("++", one(strLit("]")))))))))))), no))), cons(varDec("indentColumn", no, no, one(numLit(0))), cons(methDec(one(part("lexer", one(identifierDeclaration("code", no)))), no, no, one(objCons(cons(defDec("source", no, no, lexReq(one(part("code", no)))), cons(varDec("index", no, no, one(numLit(1))), cons(varDec("line", no, no, one(numLit(1))), cons(varDec("column", no, no, one(numLit(0))), cons(varDec("lineStart", no, no, one(numLit(0))), cons(varDec("currentToken", no, no, one(lexReq(one(part("nextToken", no))))), cons(varDec("pendingToken", no, no, one(lexReq(one(part("nextToken", no))))), cons(methDec(one(part("nextToken", no)), no, no, cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("index", no))), one(part(">", one(dotReq(lexReq(one(part("source", no))), one(part("size", no))))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("EOFToken", cons(lexReq(one(part("line", no))), one(lexReq(one(part("column", no)))))))))))))))), cons(varDec("c", no, no, one(dotReq(lexReq(one(part("source", no))), one(part("at", one(lexReq(one(part("index", no))))))))), cons(assn(lexReq(one(part("column", no))), dotReq(lexReq(one(part("index", no))), one(part("-", one(lexReq(one(part("lineStart", no)))))))), cons(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("+", one(numLit(1)))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit(" "))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("nextToken", no))))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("("))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("LParenToken", cons(lexReq(one(part("line", no))), one(lexReq(one(part("column", no)))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit(")"))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("RParenToken", cons(lexReq(one(part("line", no))), one(lexReq(one(part("column", no)))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("c", no))), one(part(">", one(strLit("z"))))), one(part("&&", one(dotReq(lexReq(one(part("c", no))), one(part("<", one(strLit("|"))))))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("LBraceToken", cons(lexReq(one(part("line", no))), one(lexReq(one(part("column", no)))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("}"))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("RBraceToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(lexReq(one(part("index", no))))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit(","))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("CommaToken", cons(lexReq(one(part("line", no))), one(lexReq(one(part("column", no)))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("c", no))), one(part("firstCodepoint", no))), one(part("==", one(numLit(13))))))), one(part("then", one(block(no, cons(assn(lexReq(one(part("c", no))), dotReq(lexReq(one(part("source", no))), one(part("at", one(lexReq(one(part("index", no)))))))), one(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("+", one(numLit(1)))))))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("c", no))), one(part("firstCodepoint", no))), one(part("==", one(numLit(10))))), one(part("||", one(dotReq(dotReq(lexReq(one(part("c", no))), one(part("firstCodepoint", no))), one(part("==", one(numLit(8232))))))))))), one(part("then", one(block(no, cons(assn(lexReq(one(part("line", no))), dotReq(lexReq(one(part("line", no))), one(part("+", one(numLit(1)))))), cons(assn(lexReq(one(part("lineStart", no))), dotReq(lexReq(one(part("index", no))), one(part("-", one(numLit(1)))))), one(returnStmt(lexReq(one(part("NewlineToken", cons(lexReq(one(part("line", no))), one(lexReq(one(part("column", no)))))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("c", no))), one(part("firstCodepoint", no))), one(part("==", one(numLit(34))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("lexString", no))))))))))), cons(lexReq(cons(part("if", one(lexReq(one(part("isDigit", one(lexReq(one(part("c", no))))))))), one(part("then", one(block(no, cons(defDec("startIndex", no, no, dotReq(lexReq(one(part("index", no))), one(part("-", one(numLit(1)))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("index", no))), one(part(">=", one(dotReq(lexReq(one(part("source", no))), one(part("size", no))))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("NumberToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(lexReq(one(part("c", no))))))))))))))))), cons(varDec("value", no, no, one(strLit(""))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(lexReq(one(part("isDigit", one(lexReq(one(part("c", no))))))), one(part("&&", one(dotReq(lexReq(one(part("index", no))), one(part("<=", one(dotReq(lexReq(one(part("source", no))), one(part("size", no))))))))))))))), one(part("do", one(block(no, cons(assn(lexReq(one(part("value", no))), dotReq(lexReq(one(part("value", no))), one(part("++", one(lexReq(one(part("c", no)))))))), cons(assn(lexReq(one(part("c", no))), dotReq(lexReq(one(part("source", no))), one(part("at", one(lexReq(one(part("index", no)))))))), one(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("+", one(numLit(1))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("."))))))), one(part("then", one(block(no, cons(assn(lexReq(one(part("value", no))), dotReq(lexReq(one(part("value", no))), one(part("++", one(lexReq(one(part("c", no)))))))), cons(assn(lexReq(one(part("c", no))), dotReq(lexReq(one(part("source", no))), one(part("at", one(lexReq(one(part("index", no)))))))), cons(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("+", one(numLit(1)))))), one(lexReq(cons(part("while", one(block(no, one(dotReq(lexReq(one(part("isDigit", one(lexReq(one(part("c", no))))))), one(part("&&", one(dotReq(lexReq(one(part("index", no))), one(part("<=", one(dotReq(lexReq(one(part("source", no))), one(part("size", no))))))))))))))), one(part("do", one(block(no, cons(assn(lexReq(one(part("value", no))), dotReq(lexReq(one(part("value", no))), one(part("++", one(lexReq(one(part("c", no)))))))), cons(assn(lexReq(one(part("c", no))), dotReq(lexReq(one(part("source", no))), one(part("at", one(lexReq(one(part("index", no)))))))), one(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("+", one(numLit(1))))))))))))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("index", no))), one(part(">", one(dotReq(lexReq(one(part("startIndex", no))), one(part("+", one(numLit(1))))))))))), one(part("then", one(block(no, one(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("-", one(numLit(1))))))))))))), one(returnStmt(lexReq(one(part("NumberToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(lexReq(one(part("value", no))))))))))))))))))))))), cons(lexReq(cons(part("if", one(lexReq(one(part("isIdentifierStart", one(lexReq(one(part("c", no))))))))), one(part("then", one(block(no, cons(defDec("startIndex", no, no, dotReq(lexReq(one(part("index", no))), one(part("-", one(numLit(1)))))), cons(varDec("value", no, no, one(lexReq(one(part("c", no))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("index", no))), one(part(">", one(dotReq(lexReq(one(part("source", no))), one(part("size", no))))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("IdentifierToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(lexReq(one(part("value", no))))))))))))))))), cons(assn(lexReq(one(part("c", no))), dotReq(lexReq(one(part("source", no))), one(part("at", one(lexReq(one(part("index", no)))))))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(lexReq(one(part("isIdentifierStart", one(lexReq(one(part("c", no))))))), one(part("||", one(lexReq(one(part("isDigit", one(lexReq(one(part("c", no))))))))))), one(part("||", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("'"))))))))), one(part("&&", one(dotReq(lexReq(one(part("index", no))), one(part("<=", one(dotReq(lexReq(one(part("source", no))), one(part("size", no))))))))))))))), one(part("do", one(block(no, cons(assn(lexReq(one(part("value", no))), dotReq(lexReq(one(part("value", no))), one(part("++", one(lexReq(one(part("c", no)))))))), cons(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("+", one(numLit(1)))))), one(lexReq(cons(part("if", one(dotReq(lexReq(one(part("index", no))), one(part("<=", one(dotReq(lexReq(one(part("source", no))), one(part("size", no))))))))), one(part("then", one(block(no, one(assn(lexReq(one(part("c", no))), dotReq(lexReq(one(part("source", no))), one(part("at", one(lexReq(one(part("index", no)))))))))))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("value", no))), one(part("==", one(strLit("var"))))), one(part("||", one(dotReq(lexReq(one(part("value", no))), one(part("==", one(strLit("def"))))))))), one(part("||", one(dotReq(lexReq(one(part("value", no))), one(part("==", one(strLit("method"))))))))), one(part("||", one(dotReq(lexReq(one(part("value", no))), one(part("==", one(strLit("object"))))))))), one(part("||", one(dotReq(lexReq(one(part("value", no))), one(part("==", one(strLit("is"))))))))), one(part("||", one(dotReq(lexReq(one(part("value", no))), one(part("==", one(strLit("return"))))))))), one(part("||", one(dotReq(lexReq(one(part("value", no))), one(part("==", one(strLit("class"))))))))), one(part("||", one(dotReq(lexReq(one(part("value", no))), one(part("==", one(strLit("type"))))))))), one(part("||", one(dotReq(lexReq(one(part("value", no))), one(part("==", one(strLit("import"))))))))), one(part("||", one(dotReq(lexReq(one(part("value", no))), one(part("==", one(strLit("self"))))))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("KeywordToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(lexReq(one(part("value", no))))))))))))))))), one(returnStmt(lexReq(one(part("IdentifierToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(lexReq(one(part("value", no))))))))))))))))))))))), cons(lexReq(cons(part("if", one(lexReq(one(part("isOperatorCharacter", one(lexReq(one(part("c", no))))))))), one(part("then", one(block(no, cons(defDec("startIndex", no, no, lexReq(one(part("index", no)))), cons(varDec("op", no, no, one(lexReq(one(part("c", no))))), cons(assn(lexReq(one(part("c", no))), dotReq(lexReq(one(part("source", no))), one(part("at", one(lexReq(one(part("index", no)))))))), cons(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("+", one(numLit(1)))))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(lexReq(one(part("isOperatorCharacter", one(lexReq(one(part("c", no))))))), one(part("&&", one(dotReq(lexReq(one(part("index", no))), one(part("<=", one(dotReq(lexReq(one(part("source", no))), one(part("size", no))))))))))))))), one(part("do", one(block(no, cons(assn(lexReq(one(part("op", no))), dotReq(lexReq(one(part("op", no))), one(part("++", one(lexReq(one(part("c", no)))))))), cons(assn(lexReq(one(part("c", no))), dotReq(lexReq(one(part("source", no))), one(part("at", one(lexReq(one(part("index", no)))))))), one(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("+", one(numLit(1))))))))))))))), cons(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("-", one(numLit(1)))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("op", no))), one(part("==", one(strLit(":="))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("AssignToken", cons(lexReq(one(part("line", no))), one(lexReq(one(part("column", no)))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("op", no))), one(part("==", one(strLit("="))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("EqualsToken", cons(lexReq(one(part("line", no))), one(lexReq(one(part("column", no)))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("op", no))), one(part("==", one(strLit("->"))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("ArrowToken", cons(lexReq(one(part("line", no))), one(lexReq(one(part("column", no)))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("op", no))), one(part("==", one(strLit("."))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("DotToken", cons(lexReq(one(part("line", no))), one(lexReq(one(part("column", no)))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("op", no))), one(part("==", one(strLit(":"))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("SymbolToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(strLit("COLON"))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("op", no))), one(part("==", one(strLit("//"))))))), one(part("then", one(block(no, cons(varDec("cp", no, no, one(dotReq(lexReq(one(part("c", no))), one(part("firstCodepoint", no))))), cons(varDec("text", no, no, one(strLit(""))), cons(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("+", one(numLit(1)))))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(lexReq(one(part("cp", no))), one(part("!=", one(numLit(10))))), one(part("&&", one(dotReq(lexReq(one(part("cp", no))), one(part("!=", one(numLit(13))))))))), one(part("&&", one(dotReq(lexReq(one(part("index", no))), one(part("<=", one(dotReq(lexReq(one(part("source", no))), one(part("size", no))))))))))))))), one(part("do", one(block(no, cons(assn(lexReq(one(part("text", no))), dotReq(lexReq(one(part("text", no))), one(part("++", one(lexReq(one(part("c", no)))))))), cons(assn(lexReq(one(part("c", no))), dotReq(lexReq(one(part("source", no))), one(part("at", one(lexReq(one(part("index", no)))))))), cons(assn(lexReq(one(part("cp", no))), dotReq(lexReq(one(part("c", no))), one(part("firstCodepoint", no)))), one(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("+", one(numLit(1)))))))))))))))), one(returnStmt(lexReq(one(part("CommentToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(lexReq(one(part("text", no))))))))))))))))))))), one(returnStmt(lexReq(one(part("OperatorToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(lexReq(one(part("op", no))))))))))))))))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit(";"))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("SymbolToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(strLit("SEMICOLON"))))))))))))))), one(lexReq(one(part("ErrorToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(dotReq(dotReq(dotReq(dotReq(strLit("Unknown character: "), one(part("++", one(dotReq(lexReq(one(part("c", no))), one(part("asString", no))))))), one(part("++", one(strLit("("))))), one(part("++", one(dotReq(dotReq(lexReq(one(part("c", no))), one(part("firstCodepoint", no))), one(part("asString", no))))))), one(part("++", one(strLit(")")))))))))))))))))))))))))))))), cons(methDec(one(part("current", no)), no, no, one(lexReq(one(part("currentToken", no))))), cons(methDec(one(part("advance", no)), no, no, cons(assn(lexReq(one(part("currentToken", no))), lexReq(one(part("pendingToken", no)))), cons(assn(lexReq(one(part("pendingToken", no))), lexReq(one(part("nextToken", no)))), one(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("currentToken", no))), one(part("nature", no))), one(part("==", one(strLit("NEWLINE"))))), one(part("&&", one(dotReq(dotReq(lexReq(one(part("pendingToken", no))), one(part("column", no))), one(part(">", one(lexReq(one(part("indentColumn", no))))))))))))), one(part("then", one(block(no, one(lexReq(one(part("advance", no)))))))))))))), cons(methDec(one(part("lexString", no)), no, no, cons(varDec("value", no, no, one(strLit(""))), cons(varDec("escaped", no, no, one(lexReq(one(part("false", no))))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("source", no))), one(part("at", one(lexReq(one(part("index", no))))))), one(part("firstCodepoint", no))), one(part("!=", one(numLit(34))))), one(part("||", one(lexReq(one(part("escaped", no))))))))))), one(part("do", one(block(no, cons(varDec("escapeNext", no, no, one(lexReq(one(part("false", no))))), cons(defDec("cp", no, no, dotReq(dotReq(lexReq(one(part("source", no))), one(part("at", one(lexReq(one(part("index", no))))))), one(part("firstCodepoint", no)))), cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("cp", no))), one(part("==", one(numLit(92))))), one(part("&&", one(dotReq(lexReq(one(part("escaped", no))), one(part("==", one(lexReq(one(part("false", no))))))))))))), cons(part("then", one(block(no, one(assn(lexReq(one(part("escapeNext", no))), lexReq(one(part("true", no)))))))), cons(part("elseif", one(block(no, one(dotReq(lexReq(one(part("escaped", no))), one(part("&&", one(dotReq(lexReq(one(part("cp", no))), one(part("==", one(numLit(110))))))))))))), cons(part("then", one(block(no, one(assn(lexReq(one(part("value", no))), dotReq(lexReq(one(part("value", no))), one(part("++", one(strLit(safeStr("", charLF, ""))))))))))), cons(part("elseif", one(block(no, one(dotReq(lexReq(one(part("escaped", no))), one(part("&&", one(dotReq(lexReq(one(part("cp", no))), one(part("==", one(numLit(114))))))))))))), cons(part("then", one(block(no, one(assn(lexReq(one(part("value", no))), dotReq(lexReq(one(part("value", no))), one(part("++", one(strLit(safeStr("", charCR, ""))))))))))), one(part("else", one(block(no, one(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("cp", no))), one(part("==", one(numLit(123))))), one(part("&&", one(dotReq(lexReq(one(part("escaped", no))), one(part("prefix!", no))))))))), cons(part("then", one(block(no, cons(comment(" String interpolation"), cons(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("+", one(numLit(1)))))), one(returnStmt(lexReq(one(part("InterpStringToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(lexReq(one(part("value", no)))))))))))))))), one(part("else", one(block(no, one(assn(lexReq(one(part("value", no))), dotReq(lexReq(one(part("value", no))), one(part("++", one(dotReq(lexReq(one(part("source", no))), one(part("at", one(lexReq(one(part("index", no)))))))))))))))))))))))))))))))), cons(assn(lexReq(one(part("escaped", no))), lexReq(one(part("escapeNext", no)))), one(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("+", one(numLit(1))))))))))))))))), cons(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("+", one(numLit(1)))))), one(returnStmt(lexReq(one(part("StringToken", cons(lexReq(one(part("line", no))), cons(lexReq(one(part("column", no))), one(lexReq(one(part("value", no)))))))))))))))), cons(methDec(one(part("startStringAt", one(identifierDeclaration("pos", no)))), no, no, cons(assn(lexReq(one(part("index", no))), lexReq(one(part("pos", no)))), cons(assn(lexReq(one(part("currentToken", no))), lexReq(one(part("lexString", no)))), one(assn(lexReq(one(part("pendingToken", no))), lexReq(one(part("nextToken", no)))))))), cons(methDec(one(part("windback", one(identifierDeclaration("pos", no)))), no, no, one(assn(lexReq(one(part("index", no))), lexReq(one(part("pos", no)))))), cons(methDec(one(part("expectToken", one(identifierDeclaration("nature", no)))), no, no, one(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("currentToken", no))), one(part("nature", no))), one(part("!=", one(lexReq(one(part("nature", no))))))))), one(part("then", one(block(no, cons(lexReq(one(part("print", one(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(strLit("Expected "), one(part("++", one(lexReq(one(part("nature", no))))))), one(part("++", one(strLit(" but got "))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("nature", no))))))), one(part("++", one(strLit(" at "))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("column", no))))))))))), one(dotReq(lexReq(one(part("Exception", no))), one(part("raise", one(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(strLit("Expected "), one(part("++", one(lexReq(one(part("nature", no))))))), one(part("++", one(strLit(" but got "))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("nature", no))))))), one(part("++", one(strLit(" at "))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("column", no))))))))))))))))))))), cons(methDec(one(part("expectSymbol", one(identifierDeclaration("nature", no)))), no, no, one(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("currentToken", no))), one(part("nature", no))), one(part("!=", one(lexReq(one(part("nature", no))))))))), one(part("then", one(block(no, cons(lexReq(one(part("print", one(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(strLit("Expected "), one(part("++", one(lexReq(one(part("nature", no))))))), one(part("++", one(strLit(" but got "))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("nature", no))))))), one(part("++", one(strLit(" at "))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("column", no))))))))))), one(dotReq(lexReq(one(part("Exception", no))), one(part("raise", one(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(strLit("Expected "), one(part("++", one(lexReq(one(part("nature", no))))))), one(part("++", one(strLit(" but got "))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("nature", no))))))), one(part("++", one(strLit(" at "))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("column", no))))))))))))))))))))), one(methDec(one(part("expectKeyword", one(identifierDeclaration("val", no)))), no, no, cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("currentToken", no))), one(part("nature", no))), one(part("!=", one(strLit("KEYWORD"))))))), one(part("then", one(block(no, cons(lexReq(one(part("print", one(dotReq(dotReq(dotReq(dotReq(dotReq(strLit("Expected KEYWORD but got "), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("nature", no))))))), one(part("++", one(strLit(" at "))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("column", no))))))))))), one(dotReq(lexReq(one(part("Exception", no))), one(part("raise", one(dotReq(dotReq(dotReq(dotReq(dotReq(strLit("Expected KEYWORD but got "), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("nature", no))))))), one(part("++", one(strLit(" at "))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("column", no))))))))))))))))))), one(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("currentToken", no))), one(part("value", no))), one(part("!=", one(lexReq(one(part("val", no))))))))), one(part("then", one(block(no, cons(lexReq(one(part("print", one(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(strLit("Expected "), one(part("++", one(lexReq(one(part("val", no))))))), one(part("++", one(strLit(" but got "))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("value", no))))))), one(part("++", one(strLit(" at "))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("column", no))))))))))), one(dotReq(lexReq(one(part("Exception", no))), one(part("raise", one(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(dotReq(strLit("Expected "), one(part("++", one(lexReq(one(part("val", no))))))), one(part("++", one(strLit(" but got "))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("value", no))))))), one(part("++", one(strLit(" at "))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("line", no))))))), one(part("++", one(strLit(":"))))), one(part("++", one(dotReq(lexReq(one(part("currentToken", no))), one(part("column", no)))))))))))))))))))))))))))))))))))))), no))), cons(methDec(one(part("digitToNumber", one(identifierDeclaration("c", no)))), no, no, cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("1"))))))), one(part("then", one(block(no, one(returnStmt(numLit(1))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("2"))))))), one(part("then", one(block(no, one(returnStmt(numLit(2))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("3"))))))), one(part("then", one(block(no, one(returnStmt(numLit(3))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("4"))))))), one(part("then", one(block(no, one(returnStmt(numLit(4))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("5"))))))), one(part("then", one(block(no, one(returnStmt(numLit(5))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("6"))))))), one(part("then", one(block(no, one(returnStmt(numLit(6))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("7"))))))), one(part("then", one(block(no, one(returnStmt(numLit(7))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("8"))))))), one(part("then", one(block(no, one(returnStmt(numLit(8))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("9"))))))), one(part("then", one(block(no, one(returnStmt(numLit(9))))))))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("c", no))), one(part("==", one(strLit("0"))))))), one(part("then", one(block(no, one(returnStmt(numLit(0))))))))), cons(lexReq(one(part("print", one(dotReq(strLit("Unexpected digit: "), one(part("++", one(dotReq(lexReq(one(part("c", no))), one(part("asString", no))))))))))), one(dotReq(lexReq(one(part("Exception", no))), one(part("raise", one(dotReq(strLit("Unexpected digit: "), one(part("++", one(dotReq(lexReq(one(part("c", no))), one(part("asString", no)))))))))))))))))))))))), cons(methDec(one(part("parseNumber", one(identifierDeclaration("lxr", no)))), no, no, cons(defDec("token", no, no, dotReq(lexReq(one(part("lxr", no))), one(part("current", no)))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(defDec("s", no, no, dotReq(lexReq(one(part("token", no))), one(part("value", no)))), cons(varDec("val", no, no, one(numLit(0))), cons(varDec("index", no, no, one(numLit(1))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(lexReq(one(part("index", no))), one(part("<=", one(dotReq(lexReq(one(part("s", no))), one(part("size", no))))))))))), one(part("do", one(block(no, cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("s", no))), one(part("at", one(lexReq(one(part("index", no))))))), one(part("==", one(strLit("."))))))), cons(part("then", one(block(no, cons(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("+", one(numLit(1)))))), cons(varDec("frac", no, no, one(numLit(0))), cons(varDec("scale", no, no, one(numLit(1))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(lexReq(one(part("index", no))), one(part("<=", one(dotReq(lexReq(one(part("s", no))), one(part("size", no))))))))))), one(part("do", one(block(no, cons(assn(lexReq(one(part("frac", no))), dotReq(dotReq(lexReq(one(part("frac", no))), one(part("*", one(numLit(10))))), one(part("+", one(lexReq(one(part("digitToNumber", one(dotReq(lexReq(one(part("s", no))), one(part("at", one(lexReq(one(part("index", no)))))))))))))))), cons(assn(lexReq(one(part("scale", no))), dotReq(lexReq(one(part("scale", no))), one(part("*", one(numLit(10)))))), one(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("+", one(numLit(1))))))))))))))), one(assn(lexReq(one(part("val", no))), dotReq(lexReq(one(part("val", no))), one(part("+", one(dotReq(lexReq(one(part("frac", no))), one(part("/", one(lexReq(one(part("scale", no)))))))))))))))))))), one(part("else", one(block(no, one(assn(lexReq(one(part("val", no))), dotReq(dotReq(lexReq(one(part("val", no))), one(part("*", one(numLit(10))))), one(part("+", one(lexReq(one(part("digitToNumber", one(dotReq(lexReq(one(part("s", no))), one(part("at", one(lexReq(one(part("index", no)))))))))))))))))))))))), one(assn(lexReq(one(part("index", no))), dotReq(lexReq(one(part("index", no))), one(part("+", one(numLit(1)))))))))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("numberNode", one(lexReq(one(part("val", no))))))))))))))), cons(methDec(one(part("parseString", one(identifierDeclaration("lxr", no)))), no, no, cons(defDec("token", no, no, dotReq(lexReq(one(part("lxr", no))), one(part("current", no)))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("==", one(strLit("INTERPSTRING"))))))), cons(part("then", one(block(no, cons(defDec("interpExpr", no, no, lexReq(one(part("parseExpression", one(lexReq(one(part("lxr", no)))))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("expectSymbol", one(strLit("RBRACE"))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("startStringAt", one(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("index", no))))))), cons(defDec("nextStr", no, no, lexReq(one(part("parseString", one(lexReq(one(part("lxr", no)))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("interpString", cons(dotReq(lexReq(one(part("token", no))), one(part("value", no))), cons(lexReq(one(part("interpExpr", no))), one(lexReq(one(part("nextStr", no))))))))))))))))), one(part("else", one(block(no, one(dotReq(lexReq(one(part("ast", no))), one(part("stringNode", one(dotReq(lexReq(one(part("token", no))), one(part("value", no))))))))))))))))))), cons(methDec(one(part("parselexicalRequestNoBlock", cons(identifierDeclaration("lxr", no), one(identifierDeclaration("id", no))))), no, no, cons(defDec("parts", no, no, lexReq(one(part("parseparts", cons(lexReq(one(part("lxr", no))), one(lexReq(one(part("false", no))))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("lexicalRequest", one(lexReq(one(part("parts", no)))))))))), cons(methDec(one(part("parselexicalRequest", one(identifierDeclaration("lxr", no)))), no, no, cons(defDec("parts", no, no, lexReq(one(part("parseparts", cons(lexReq(one(part("lxr", no))), one(lexReq(one(part("true", no))))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("lexicalRequest", one(lexReq(one(part("parts", no)))))))))), cons(methDec(one(part("parseparts", cons(identifierDeclaration("lxr", no), one(identifierDeclaration("allowBlock", no))))), no, no, cons(varDec("parts", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("IDENTIFIER"))))))))), one(part("do", one(block(no, cons(varDec("id", no, no, one(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("value", no))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("LPAREN"))))))), cons(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(varDec("args", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("!=", one(strLit("RPAREN"))))), one(part("&&", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("!=", one(strLit("EOF"))))))))))))), one(part("do", one(block(no, cons(assn(lexReq(one(part("args", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("parseExpression", one(lexReq(one(part("lxr", no))))))), one(lexReq(one(part("args", no))))))))), one(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("COMMA"))))))), one(part("then", one(block(no, one(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no)))))))))))))))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(defDec("part", no, no, dotReq(lexReq(one(part("ast", no))), one(part("part", cons(lexReq(one(part("id", no))), one(dotReq(lexReq(one(part("args", no))), one(part("reversed", one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))))))))), one(assn(lexReq(one(part("parts", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("part", no))), one(lexReq(one(part("parts", no)))))))))))))))))), cons(part("elseif", one(block(no, one(dotReq(lexReq(one(part("allowBlock", no))), one(part("&&", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("LBRACE"))))))))))))), cons(part("then", one(block(no, cons(defDec("blk", no, no, lexReq(one(part("parseblock", one(lexReq(one(part("lxr", no)))))))), cons(defDec("part", no, no, dotReq(lexReq(one(part("ast", no))), one(part("part", cons(lexReq(one(part("id", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("blk", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no)))))))))))))), one(assn(lexReq(one(part("parts", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("part", no))), one(lexReq(one(part("parts", no))))))))))))))), cons(part("elseif", one(block(no, one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("NUMBER"))))))))), cons(part("then", one(block(no, cons(defDec("num", no, no, lexReq(one(part("parseNumber", one(lexReq(one(part("lxr", no)))))))), cons(defDec("part", no, no, dotReq(lexReq(one(part("ast", no))), one(part("part", cons(lexReq(one(part("id", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("num", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no)))))))))))))), one(assn(lexReq(one(part("parts", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("part", no))), one(lexReq(one(part("parts", no))))))))))))))), cons(part("elseif", one(block(no, one(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("STRING"))))), one(part("||", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("INTERPSTRING"))))))))))))), cons(part("then", one(block(no, cons(defDec("str", no, no, lexReq(one(part("parseString", one(lexReq(one(part("lxr", no)))))))), cons(defDec("part", no, no, dotReq(lexReq(one(part("ast", no))), one(part("part", cons(lexReq(one(part("id", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("str", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no)))))))))))))), one(assn(lexReq(one(part("parts", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("part", no))), one(lexReq(one(part("parts", no))))))))))))))), one(part("else", one(block(no, cons(defDec("part", no, no, dotReq(lexReq(one(part("ast", no))), one(part("part", cons(lexReq(one(part("id", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))))), cons(assn(lexReq(one(part("parts", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("part", no))), one(lexReq(one(part("parts", no))))))))), one(returnStmt(dotReq(lexReq(one(part("parts", no))), one(part("reversed", one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))))))))))))))))))))))))))))), one(dotReq(lexReq(one(part("parts", no))), one(part("reversed", one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))))))), cons(methDec(one(part("parseexplicitRequestNoBlock", cons(identifierDeclaration("receiver", no), one(identifierDeclaration("lxr", no))))), no, no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(defDec("pos", no, no, dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("asString", no)))), cons(defDec("parts", no, no, lexReq(one(part("parseparts", cons(lexReq(one(part("lxr", no))), one(lexReq(one(part("false", no))))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("explicitRequest", cons(lexReq(one(part("pos", no))), cons(lexReq(one(part("receiver", no))), one(lexReq(one(part("parts", no)))))))))))))), cons(methDec(one(part("parseexplicitRequest", cons(identifierDeclaration("receiver", no), one(identifierDeclaration("lxr", no))))), no, no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(defDec("pos", no, no, dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("asString", no)))), cons(defDec("parts", no, no, lexReq(one(part("parseparts", cons(lexReq(one(part("lxr", no))), one(lexReq(one(part("true", no))))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("explicitRequest", cons(lexReq(one(part("pos", no))), cons(lexReq(one(part("receiver", no))), one(lexReq(one(part("parts", no)))))))))))))), cons(methDec(one(part("parseTypeExpression", one(identifierDeclaration("lxr", no)))), no, no, cons(defDec("token", no, no, dotReq(lexReq(one(part("lxr", no))), one(part("current", no)))), cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("==", one(strLit("IDENTIFIER"))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("parselexicalRequestNoBlock", cons(lexReq(one(part("lxr", no))), one(dotReq(lexReq(one(part("token", no))), one(part("value", no)))))))))))))))), cons(lexReq(one(part("print", one(dotReq(strLit("Unexpected token: "), one(part("++", one(dotReq(lexReq(one(part("token", no))), one(part("asString", no))))))))))), one(dotReq(lexReq(one(part("Exception", no))), one(part("raise", one(dotReq(strLit("Unexpected token: "), one(part("++", one(dotReq(lexReq(one(part("token", no))), one(part("asString", no)))))))))))))))), cons(methDec(one(part("parseExpressionNoOpNoDot", one(identifierDeclaration("lxr", no)))), no, no, cons(defDec("token", no, no, dotReq(lexReq(one(part("lxr", no))), one(part("current", no)))), cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("==", one(strLit("NUMBER"))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("parseNumber", one(lexReq(one(part("lxr", no))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("==", one(strLit("STRING"))))), one(part("||", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("INTERPSTRING"))))))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("parseString", one(lexReq(one(part("lxr", no))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("==", one(strLit("LPAREN"))))))), one(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(defDec("expr", no, no, lexReq(one(part("parseExpression", one(lexReq(one(part("lxr", no)))))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(returnStmt(lexReq(one(part("expr", no)))))))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("==", one(strLit("LBRACE"))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("parseblock", one(lexReq(one(part("lxr", no))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("==", one(strLit("IDENTIFIER"))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("parselexicalRequest", one(lexReq(one(part("lxr", no))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("==", one(strLit("KEYWORD"))))))), one(part("then", one(block(no, one(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("value", no))), one(part("==", one(strLit("object"))))))), cons(part("then", one(block(no, one(returnStmt(lexReq(one(part("parseObject", one(lexReq(one(part("lxr", no)))))))))))), cons(part("elseif", one(block(no, one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("value", no))), one(part("==", one(strLit("self"))))))))), one(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(returnStmt(dotReq(lexReq(one(part("ast", no))), one(part("lexicalRequest", one(dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(dotReq(lexReq(one(part("ast", no))), one(part("part", cons(strLit("self"), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no)))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no)))))))))))))))))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("==", one(strLit("OPERATOR"))))))), one(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(defDec("pos", no, no, dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("asString", no)))), cons(defDec("expr", no, no, lexReq(one(part("parseExpressionNoOp", one(lexReq(one(part("lxr", no)))))))), one(returnStmt(dotReq(lexReq(one(part("ast", no))), one(part("explicitRequest", cons(lexReq(one(part("pos", no))), cons(lexReq(one(part("expr", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(dotReq(lexReq(one(part("ast", no))), one(part("part", cons(dotReq(strLit("prefix"), one(part("++", one(dotReq(lexReq(one(part("token", no))), one(part("value", no))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no)))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))))))))))))))))))))), cons(lexReq(one(part("print", one(dotReq(strLit("Unexpected token: "), one(part("++", one(dotReq(lexReq(one(part("token", no))), one(part("asString", no))))))))))), one(dotReq(lexReq(one(part("Exception", no))), one(part("raise", one(dotReq(strLit("Unexpected token: "), one(part("++", one(dotReq(lexReq(one(part("token", no))), one(part("asString", no)))))))))))))))))))))), cons(methDec(one(part("parseExpressionNoOp", one(identifierDeclaration("lxr", no)))), no, no, cons(varDec("left", no, no, one(lexReq(one(part("parseExpressionNoOpNoDot", one(lexReq(one(part("lxr", no))))))))), cons(varDec("token", no, no, one(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("==", one(strLit("DOT"))))))))), one(part("do", one(block(no, cons(assn(lexReq(one(part("left", no))), lexReq(one(part("parseexplicitRequest", cons(lexReq(one(part("left", no))), one(lexReq(one(part("lxr", no))))))))), one(assn(lexReq(one(part("token", no))), dotReq(lexReq(one(part("lxr", no))), one(part("current", no)))))))))))), one(returnStmt(lexReq(one(part("left", no))))))))), cons(methDec(one(part("parseExpression", one(identifierDeclaration("lxr", no)))), no, no, cons(varDec("left", no, no, one(lexReq(one(part("parseExpressionNoOp", one(lexReq(one(part("lxr", no))))))))), cons(varDec("token", no, no, one(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("==", one(strLit("OPERATOR"))))))))), one(part("do", one(block(no, cons(defDec("pos", no, no, dotReq(lexReq(one(part("token", no))), one(part("asString", no)))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(defDec("right", no, no, lexReq(one(part("parseExpressionNoOp", one(lexReq(one(part("lxr", no)))))))), cons(defDec("args", no, no, dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("right", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))))), cons(defDec("part", no, no, dotReq(lexReq(one(part("ast", no))), one(part("part", cons(dotReq(lexReq(one(part("token", no))), one(part("value", no))), one(lexReq(one(part("args", no))))))))), cons(defDec("parts", no, no, dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("part", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))))), cons(defDec("req", no, no, dotReq(lexReq(one(part("ast", no))), one(part("explicitRequest", cons(lexReq(one(part("pos", no))), cons(lexReq(one(part("left", no))), one(dotReq(lexReq(one(part("parts", no))), one(part("reversed", one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no)))))))))))))), cons(assn(lexReq(one(part("left", no))), lexReq(one(part("req", no)))), one(assn(lexReq(one(part("token", no))), dotReq(lexReq(one(part("lxr", no))), one(part("current", no))))))))))))))))))), one(returnStmt(lexReq(one(part("left", no))))))))), cons(methDec(one(part("parseReturnStatement", one(identifierDeclaration("lxr", no)))), no, no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(defDec("val", no, no, lexReq(one(part("parseExpression", one(lexReq(one(part("lxr", no)))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("returnStmt", one(lexReq(one(part("val", no))))))))))), cons(methDec(one(part("parseStatement", one(identifierDeclaration("lxr", no)))), no, no, cons(defDec("token", no, no, dotReq(lexReq(one(part("lxr", no))), one(part("current", no)))), cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("==", one(strLit("KEYWORD"))))))), cons(part("then", one(block(no, cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("value", no))), one(part("==", one(strLit("return"))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("parseReturnStatement", one(lexReq(one(part("lxr", no))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("value", no))), one(part("==", one(strLit("var"))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("parsevarDeclaration", one(lexReq(one(part("lxr", no))))))))))))))), one(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("value", no))), one(part("==", one(strLit("def"))))))), one(part("then", one(block(no, one(returnStmt(lexReq(one(part("parsedefDeclaration", one(lexReq(one(part("lxr", no))))))))))))))))))))), cons(part("elseif", one(block(no, one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("==", one(strLit("COMMENT"))))))))), one(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(returnStmt(dotReq(lexReq(one(part("ast", no))), one(part("comment", one(dotReq(lexReq(one(part("token", no))), one(part("value", no)))))))))))))))))), cons(varDec("exp", no, no, one(lexReq(one(part("parseExpression", one(lexReq(one(part("lxr", no))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("ASSIGN"))))))), one(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(defDec("val", no, no, lexReq(one(part("parseExpression", one(lexReq(one(part("lxr", no)))))))), one(assn(lexReq(one(part("exp", no))), dotReq(lexReq(one(part("ast", no))), one(part("assign", cons(lexReq(one(part("exp", no))), one(lexReq(one(part("val", no)))))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("NEWLINE"))))))), one(part("then", one(block(no, one(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no)))))))))), one(lexReq(one(part("exp", no)))))))))), cons(methDec(one(part("parseblock", one(identifierDeclaration("lxr", no)))), no, no, cons(varDec("params", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(varDec("body", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(defDec("indentBefore", no, no, lexReq(one(part("indentColumn", no)))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("LBRACE"))))))), one(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("NEWLINE"))))))))), one(part("do", one(block(no, one(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no)))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("!=", one(strLit("RBRACE"))))))), one(part("then", one(block(no, cons(defDec("firstTok", no, no, dotReq(lexReq(one(part("lxr", no))), one(part("current", no)))), cons(assn(lexReq(one(part("indentColumn", no))), dotReq(lexReq(one(part("firstTok", no))), one(part("column", no)))), cons(defDec("first", no, no, lexReq(one(part("parseStatement", one(lexReq(one(part("lxr", no)))))))), cons(defDec("after", no, no, dotReq(lexReq(one(part("lxr", no))), one(part("current", no)))), one(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("after", no))), one(part("nature", no))), one(part("==", one(strLit("COLON"))))), one(part("||", one(dotReq(dotReq(lexReq(one(part("after", no))), one(part("nature", no))), one(part("==", one(strLit("ARROW"))))))))), one(part("||", one(dotReq(dotReq(lexReq(one(part("after", no))), one(part("nature", no))), one(part("==", one(strLit("COMMA"))))))))))), cons(part("then", one(block(no, cons(comment(" Parameter list"), cons(varDec("prm", no, no, one(lexReq(one(part("first", no))))), cons(varDec("tp", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("after", no))), one(part("nature", no))), one(part("==", one(strLit("COLON"))))))), one(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(assn(lexReq(one(part("tp", no))), lexReq(one(part("parseTypeExpression", one(lexReq(one(part("lxr", no)))))))))))))))), cons(comment("prm := ast.identifierDeclaration(prm, tp)"), cons(assn(lexReq(one(part("params", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("prm", no))), one(lexReq(one(part("params", no))))))))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("!=", one(strLit("ARROW"))))), one(part("&&", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("!=", one(strLit("RBRACE"))))))))))))), one(part("do", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("NEWLINE"))))))), cons(part("then", one(block(no, one(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))))))), one(part("else", one(block(no, cons(assn(lexReq(one(part("prm", no))), lexReq(one(part("parseExpressionNoOpNoDot", one(lexReq(one(part("lxr", no)))))))), cons(assn(lexReq(one(part("tp", no))), dotReq(lexReq(one(part("ast", no))), one(part("nil", no)))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("COLON"))))))), one(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(assn(lexReq(one(part("tp", no))), lexReq(one(part("parseTypeExpression", one(lexReq(one(part("lxr", no)))))))))))))))), cons(comment("prm := ast.identifierDeclaration(prm, tp)"), one(assn(lexReq(one(part("params", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("prm", no))), one(lexReq(one(part("params", no))))))))))))))))))))))))))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("expectToken", one(strLit("ARROW"))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("NEWLINE"))))))))), one(part("do", one(block(no, one(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))))))))))))))))))))))), one(part("else", one(block(no, cons(assn(lexReq(one(part("indentColumn", no))), lexReq(one(part("indentBefore", no)))), one(assn(lexReq(one(part("body", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("first", no))), one(lexReq(one(part("body", no))))))))))))))))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("SEMICOLON"))))))), one(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(dotReq(lexReq(one(part("lxr", no))), one(part("expectToken", one(strLit("NEWLINE"))))))))))))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("NEWLINE"))))))))), one(part("do", one(block(no, one(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no)))))))))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("!=", one(strLit("RBRACE"))))))))), one(part("do", one(block(no, cons(assn(lexReq(one(part("indentColumn", no))), dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("column", no)))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("indentColumn", no))), one(part("<=", one(lexReq(one(part("indentBefore", no))))))))), one(part("then", one(block(no, cons(lexReq(one(part("print", one(dotReq(dotReq(dotReq(dotReq(dotReq(strLit("Indentation must increase inside block body. Expected at least column "), one(part("++", one(dotReq(lexReq(one(part("indentBefore", no))), one(part("+", one(numLit(1))))))))), one(part("++", one(strLit(" on line "))))), one(part("++", one(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("line", no))))))), one(part("++", one(strLit(" but got "))))), one(part("++", one(lexReq(one(part("indentColumn", no))))))))))), one(dotReq(lexReq(one(part("Exception", no))), one(part("raise", one(dotReq(dotReq(dotReq(dotReq(dotReq(strLit("Indentation must increase inside block body. Expected at least column "), one(part("++", one(dotReq(lexReq(one(part("indentBefore", no))), one(part("+", one(numLit(1))))))))), one(part("++", one(strLit(" on line "))))), one(part("++", one(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("line", no))))))), one(part("++", one(strLit(" but got "))))), one(part("++", one(lexReq(one(part("indentColumn", no))))))))))))))))))), cons(assn(lexReq(one(part("body", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("parseStatement", one(lexReq(one(part("lxr", no))))))), one(lexReq(one(part("body", no))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("SEMICOLON"))))))), one(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(dotReq(lexReq(one(part("lxr", no))), one(part("expectToken", one(strLit("NEWLINE"))))))))))))), one(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("NEWLINE"))))))))), one(part("do", one(block(no, one(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))))))))))))))))))))), one(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no)))))))))))))))), cons(assn(lexReq(one(part("indentColumn", no))), lexReq(one(part("indentBefore", no)))), one(dotReq(lexReq(one(part("ast", no))), one(part("block", cons(dotReq(lexReq(one(part("params", no))), one(part("reversed", one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))), one(dotReq(lexReq(one(part("body", no))), one(part("reversed", one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))))))))))))))), cons(methDec(one(part("parseAnnotations", one(identifierDeclaration("lxr", no)))), no, no, cons(varDec("anns", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("IDENTIFIER"))))))))), one(part("do", one(block(no, cons(assn(lexReq(one(part("anns", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("value", no))), one(lexReq(one(part("anns", no))))))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("COMMA"))))))), one(part("then", one(block(no, one(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))))))))))))))))))), one(dotReq(lexReq(one(part("anns", no))), one(part("reversed", one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no)))))))))))), cons(methDec(one(part("parsedefDeclaration", one(identifierDeclaration("lxr", no)))), no, no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("expectToken", one(strLit("IDENTIFIER"))))), cons(defDec("name", no, no, dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("value", no)))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(varDec("dtype", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("COLON"))))))), one(part("then", one(block(no, cons(comment(" Type annotation"), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(assn(lexReq(one(part("dtype", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("parseExpression", one(lexReq(one(part("lxr", no))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no)))))))))))))))))), cons(varDec("anns", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("KEYWORD"))))))), one(part("then", one(block(no, one(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("value", no))), one(part("==", one(strLit("is"))))))), one(part("then", one(block(no, one(assn(lexReq(one(part("anns", no))), lexReq(one(part("parseAnnotations", one(lexReq(one(part("lxr", no)))))))))))))))))))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(defDec("val", no, no, lexReq(one(part("parseExpression", one(lexReq(one(part("lxr", no)))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("defDecl", cons(lexReq(one(part("name", no))), cons(lexReq(one(part("dtype", no))), cons(lexReq(one(part("anns", no))), one(lexReq(one(part("val", no)))))))))))))))))))))), cons(methDec(one(part("parsevarDeclaration", one(identifierDeclaration("lxr", no)))), no, no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("expectToken", one(strLit("IDENTIFIER"))))), cons(defDec("name", no, no, dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("value", no)))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(varDec("dtype", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("COLON"))))))), one(part("then", one(block(no, cons(comment(" Type annotation"), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(assn(lexReq(one(part("dtype", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("parseExpression", one(lexReq(one(part("lxr", no))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no)))))))))))))))))), cons(varDec("anns", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("KEYWORD"))))))), one(part("then", one(block(no, one(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("value", no))), one(part("==", one(strLit("is"))))))), one(part("then", one(block(no, one(assn(lexReq(one(part("anns", no))), lexReq(one(part("parseAnnotations", one(lexReq(one(part("lxr", no)))))))))))))))))))))), one(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("ASSIGN"))))))), cons(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(defDec("val", no, no, lexReq(one(part("parseExpression", one(lexReq(one(part("lxr", no)))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("varDecl", cons(lexReq(one(part("name", no))), cons(lexReq(one(part("dtype", no))), cons(lexReq(one(part("anns", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("val", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))))))))))))))))), one(part("else", one(block(no, one(dotReq(lexReq(one(part("ast", no))), one(part("varDecl", cons(lexReq(one(part("name", no))), cons(lexReq(one(part("dtype", no))), cons(lexReq(one(part("anns", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no)))))))))))))))))))))))))))), cons(methDec(one(part("parseMethodBody", one(identifierDeclaration("lxr", no)))), no, no, cons(varDec("body", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(defDec("indentBefore", no, no, lexReq(one(part("indentColumn", no)))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("!=", one(strLit("RBRACE"))))))))), one(part("do", one(block(no, cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("SEMICOLON"))))))), one(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(dotReq(lexReq(one(part("lxr", no))), one(part("expectToken", one(strLit("NEWLINE"))))))))))))), one(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("NEWLINE"))))))), cons(part("then", one(block(no, one(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))))))), one(part("else", one(block(no, cons(assn(lexReq(one(part("indentColumn", no))), dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("column", no)))), cons(lexReq(cons(part("if", one(dotReq(lexReq(one(part("indentColumn", no))), one(part("<=", one(lexReq(one(part("indentBefore", no))))))))), one(part("then", one(block(no, cons(lexReq(one(part("print", one(dotReq(dotReq(dotReq(dotReq(dotReq(strLit("Indentation must increase inside method body. Expected at least column "), one(part("++", one(dotReq(lexReq(one(part("indentBefore", no))), one(part("+", one(numLit(1))))))))), one(part("++", one(strLit(" on line "))))), one(part("++", one(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("line", no))))))), one(part("++", one(strLit(" but got "))))), one(part("++", one(lexReq(one(part("indentColumn", no))))))))))), one(dotReq(lexReq(one(part("Exception", no))), one(part("raise", one(dotReq(dotReq(dotReq(dotReq(dotReq(strLit("Indentation must increase inside method body. Expected at least column "), one(part("++", one(dotReq(lexReq(one(part("indentBefore", no))), one(part("+", one(numLit(1))))))))), one(part("++", one(strLit(" on line "))))), one(part("++", one(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("line", no))))))), one(part("++", one(strLit(" but got "))))), one(part("++", one(lexReq(one(part("indentColumn", no))))))))))))))))))), one(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("KEYWORD"))))))), cons(part("then", one(block(no, one(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("value", no))), one(part("==", one(strLit("var"))))))), cons(part("then", one(block(no, cons(defDec("dec", no, no, lexReq(one(part("parsevarDeclaration", one(lexReq(one(part("lxr", no)))))))), one(assn(lexReq(one(part("body", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("dec", no))), one(lexReq(one(part("body", no)))))))))))))), cons(part("elseif", one(block(no, one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("value", no))), one(part("==", one(strLit("def"))))))))), cons(part("then", one(block(no, cons(defDec("dec", no, no, lexReq(one(part("parsedefDeclaration", one(lexReq(one(part("lxr", no)))))))), one(assn(lexReq(one(part("body", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("dec", no))), one(lexReq(one(part("body", no)))))))))))))), one(part("else", one(block(no, one(assn(lexReq(one(part("body", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("parseStatement", one(lexReq(one(part("lxr", no))))))), one(lexReq(one(part("body", no))))))))))))))))))))))), one(part("else", one(block(no, one(assn(lexReq(one(part("body", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("parseStatement", one(lexReq(one(part("lxr", no))))))), one(lexReq(one(part("body", no))))))))))))))))))))))))))))))))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(assn(lexReq(one(part("indentColumn", no))), lexReq(one(part("indentBefore", no)))), one(dotReq(lexReq(one(part("body", no))), one(part("reversed", one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))))))))))), cons(methDec(one(part("parseMethodDeclaration", one(identifierDeclaration("lxr", no)))), no, no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(varDec("parts", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("IDENTIFIER"))))))))), one(part("do", one(block(no, cons(defDec("id", no, no, dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("value", no)))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("LPAREN"))))))), cons(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(varDec("args", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("!=", one(strLit("RPAREN"))))), one(part("&&", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("!=", one(strLit("EOF"))))))))))))), one(part("do", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("expectToken", one(strLit("IDENTIFIER"))))), cons(defDec("idToken", no, no, dotReq(lexReq(one(part("lxr", no))), one(part("current", no)))), cons(varDec("dtype", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("COLON"))))))), one(part("then", one(block(no, cons(comment(" Type annotation"), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(assn(lexReq(one(part("dtype", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("parseTypeExpression", one(lexReq(one(part("lxr", no))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no)))))))))))))))))), cons(assn(lexReq(one(part("args", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(dotReq(lexReq(one(part("ast", no))), one(part("identifierDeclaration", cons(dotReq(lexReq(one(part("idToken", no))), one(part("value", no))), one(lexReq(one(part("dtype", no)))))))), one(lexReq(one(part("args", no))))))))), one(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("COMMA"))))))), one(part("then", one(block(no, one(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))))))))))))))))))))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(defDec("part", no, no, dotReq(lexReq(one(part("ast", no))), one(part("part", cons(lexReq(one(part("id", no))), one(dotReq(lexReq(one(part("args", no))), one(part("reversed", one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))))))))), one(assn(lexReq(one(part("parts", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("part", no))), one(lexReq(one(part("parts", no)))))))))))))))))), one(part("else", one(block(no, cons(defDec("part", no, no, dotReq(lexReq(one(part("ast", no))), one(part("part", cons(lexReq(one(part("id", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))))), one(assn(lexReq(one(part("parts", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("part", no))), one(lexReq(one(part("parts", no))))))))))))))))))))))))))), cons(varDec("dtype", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("ARROW"))))))), one(part("then", one(block(no, cons(comment(" Type annotation"), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(assn(lexReq(one(part("dtype", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("parseTypeExpression", one(lexReq(one(part("lxr", no))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no)))))))))))))))))), cons(varDec("anns", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("KEYWORD"))))))), one(part("then", one(block(no, one(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("value", no))), one(part("==", one(strLit("is"))))))), one(part("then", one(block(no, one(assn(lexReq(one(part("anns", no))), lexReq(one(part("parseAnnotations", one(lexReq(one(part("lxr", no)))))))))))))))))))))), cons(comment("lxr.advance"), cons(defDec("body", no, no, lexReq(one(part("parseMethodBody", one(lexReq(one(part("lxr", no)))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("methodDecl", cons(dotReq(lexReq(one(part("parts", no))), one(part("reversed", one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))), cons(lexReq(one(part("dtype", no))), cons(lexReq(one(part("anns", no))), one(lexReq(one(part("body", no))))))))))))))))))))), cons(methDec(one(part("parseClassDeclaration", one(identifierDeclaration("lxr", no)))), no, no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(varDec("parts", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("IDENTIFIER"))))))))), one(part("do", one(block(no, cons(defDec("id", no, no, dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("value", no)))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("LPAREN"))))))), cons(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(varDec("args", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("!=", one(strLit("RPAREN"))))), one(part("&&", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("!=", one(strLit("EOF"))))))))))))), one(part("do", one(block(no, cons(assn(lexReq(one(part("args", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(dotReq(lexReq(one(part("ast", no))), one(part("identifierDeclaration", one(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("value", no))))))), one(lexReq(one(part("args", no))))))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("COMMA"))))))), one(part("then", one(block(no, one(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))))))))))))))))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(defDec("part", no, no, dotReq(lexReq(one(part("ast", no))), one(part("part", cons(lexReq(one(part("id", no))), one(dotReq(lexReq(one(part("args", no))), one(part("reversed", one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))))))))), one(assn(lexReq(one(part("parts", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("part", no))), one(lexReq(one(part("parts", no)))))))))))))))))), one(part("else", one(block(no, cons(defDec("part", no, no, dotReq(lexReq(one(part("ast", no))), one(part("part", cons(lexReq(one(part("id", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))))), one(assn(lexReq(one(part("parts", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("part", no))), one(lexReq(one(part("parts", no))))))))))))))))))))))))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(defDec("body", no, no, lexReq(one(part("parseObjectBody", one(lexReq(one(part("lxr", no)))))))), cons(defDec("obj", no, no, dotReq(lexReq(one(part("ast", no))), one(part("objectConstructor", cons(lexReq(one(part("body", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("methodDecl", cons(dotReq(lexReq(one(part("parts", no))), one(part("reversed", one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))), cons(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))), cons(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("obj", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))))))))))))))))))), cons(methDec(one(part("parseImport", one(identifierDeclaration("lxr", no)))), no, no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("expectKeyword", one(strLit("import"))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("expectToken", one(strLit("STRING"))))), cons(defDec("src", no, no, dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("value", no)))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("expectToken", one(strLit("IDENTIFIER"))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("value", no))), one(part("!=", one(strLit("as"))))))), one(part("then", one(block(no, one(dotReq(lexReq(one(part("Exception", no))), one(part("raise", one(strLit("Expected 'as' in import")))))))))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("expectToken", one(strLit("IDENTIFIER"))))), cons(defDec("name", no, no, dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("value", no)))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(varDec("ident", no, no, no), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("COLON"))))))), cons(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(defDec("aType", no, no, lexReq(one(part("parseTypeExpression", one(lexReq(one(part("lxr", no)))))))), one(assn(lexReq(one(part("ident", no))), dotReq(lexReq(one(part("ast", no))), one(part("identifierDeclaration", cons(lexReq(one(part("name", no))), one(lexReq(one(part("aType", no))))))))))))))), one(part("else", one(block(no, one(assn(lexReq(one(part("ident", no))), dotReq(lexReq(one(part("ast", no))), one(part("identifierDeclaration", cons(lexReq(one(part("name", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))))))))))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("importStmt", cons(lexReq(one(part("src", no))), one(lexReq(one(part("ident", no))))))))))))))))))))))), cons(methDec(one(part("parseObjectBody", one(identifierDeclaration("lxr", no)))), no, no, cons(varDec("body", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(varDec("token", no, no, one(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))))), cons(defDec("indentBefore", no, no, lexReq(one(part("indentColumn", no)))), cons(lexReq(cons(part("while", one(block(no, one(dotReq(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("!=", one(strLit("EOF"))))), one(part("&&", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("!=", one(strLit("RBRACE"))))))))))))), one(part("do", one(block(no, cons(assn(lexReq(one(part("indentColumn", no))), dotReq(lexReq(one(part("token", no))), one(part("column", no)))), cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("indentColumn", no))), one(part("<=", one(lexReq(one(part("indentBefore", no))))))), one(part("&&", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("!=", one(strLit("NEWLINE"))))))))))), one(part("then", one(block(no, cons(lexReq(one(part("print", one(dotReq(dotReq(dotReq(dotReq(dotReq(strLit("Indentation must increase inside object body. Expected at least column "), one(part("++", one(dotReq(lexReq(one(part("indentBefore", no))), one(part("+", one(numLit(1))))))))), one(part("++", one(strLit(" on line "))))), one(part("++", one(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("line", no))))))), one(part("++", one(strLit(" but got "))))), one(part("++", one(lexReq(one(part("indentColumn", no))))))))))), one(dotReq(lexReq(one(part("Exception", no))), one(part("raise", one(dotReq(dotReq(dotReq(dotReq(dotReq(strLit("Indentation must increase inside object body. Expected at least column "), one(part("++", one(dotReq(lexReq(one(part("indentBefore", no))), one(part("+", one(numLit(1))))))))), one(part("++", one(strLit(" on line "))))), one(part("++", one(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("line", no))))))), one(part("++", one(strLit(" but got "))))), one(part("++", one(lexReq(one(part("indentColumn", no))))))))))))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("==", one(strLit("SEMICOLON"))))))), one(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(assn(lexReq(one(part("token", no))), dotReq(lexReq(one(part("lxr", no))), one(part("current", no)))), one(dotReq(lexReq(one(part("lxr", no))), one(part("expectToken", one(strLit("NEWLINE")))))))))))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("==", one(strLit("NEWLINE"))))))), cons(part("then", one(block(no, one(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))))))), cons(part("elseif", one(block(no, one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("nature", no))), one(part("==", one(strLit("KEYWORD"))))))))), cons(part("then", one(block(no, one(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("value", no))), one(part("==", one(strLit("var"))))))), cons(part("then", one(block(no, cons(defDec("dec", no, no, lexReq(one(part("parsevarDeclaration", one(lexReq(one(part("lxr", no)))))))), one(assn(lexReq(one(part("body", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("dec", no))), one(lexReq(one(part("body", no)))))))))))))), cons(part("elseif", one(block(no, one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("value", no))), one(part("==", one(strLit("def"))))))))), cons(part("then", one(block(no, cons(defDec("dec", no, no, lexReq(one(part("parsedefDeclaration", one(lexReq(one(part("lxr", no)))))))), one(assn(lexReq(one(part("body", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("dec", no))), one(lexReq(one(part("body", no)))))))))))))), cons(part("elseif", one(block(no, one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("value", no))), one(part("==", one(strLit("method"))))))))), cons(part("then", one(block(no, cons(defDec("dec", no, no, lexReq(one(part("parseMethodDeclaration", one(lexReq(one(part("lxr", no)))))))), one(assn(lexReq(one(part("body", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("dec", no))), one(lexReq(one(part("body", no)))))))))))))), cons(part("elseif", one(block(no, one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("value", no))), one(part("==", one(strLit("class"))))))))), cons(part("then", one(block(no, cons(defDec("dec", no, no, lexReq(one(part("parseClassDeclaration", one(lexReq(one(part("lxr", no)))))))), one(assn(lexReq(one(part("body", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("dec", no))), one(lexReq(one(part("body", no)))))))))))))), one(part("else", one(block(no, one(lexReq(cons(part("if", one(dotReq(dotReq(lexReq(one(part("token", no))), one(part("value", no))), one(part("==", one(strLit("import"))))))), cons(part("then", one(block(no, cons(defDec("imp", no, no, lexReq(one(part("parseImport", one(lexReq(one(part("lxr", no)))))))), one(assn(lexReq(one(part("body", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("imp", no))), one(lexReq(one(part("body", no)))))))))))))), one(part("else", one(block(no, cons(defDec("stmt", no, no, lexReq(one(part("parseStatement", one(lexReq(one(part("lxr", no)))))))), one(assn(lexReq(one(part("body", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("stmt", no))), one(lexReq(one(part("body", no)))))))))))))))))))))))))))))))))))), one(part("else", one(block(no, cons(defDec("stmt", no, no, lexReq(one(part("parseStatement", one(lexReq(one(part("lxr", no)))))))), one(assn(lexReq(one(part("body", no))), dotReq(lexReq(one(part("ast", no))), one(part("cons", cons(lexReq(one(part("stmt", no))), one(lexReq(one(part("body", no)))))))))))))))))))), one(assn(lexReq(one(part("token", no))), dotReq(lexReq(one(part("lxr", no))), one(part("current", no))))))))))))))), cons(assn(lexReq(one(part("indentColumn", no))), lexReq(one(part("indentBefore", no)))), one(dotReq(lexReq(one(part("body", no))), one(part("reversed", one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no)))))))))))))), cons(methDec(one(part("parseObject", one(identifierDeclaration("lxr", no)))), no, no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(varDec("anns", no, no, one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no))))), cons(lexReq(cons(part("if", one(dotReq(dotReq(dotReq(lexReq(one(part("lxr", no))), one(part("current", no))), one(part("nature", no))), one(part("==", one(strLit("KEYWORD"))))))), one(part("then", one(block(no, cons(dotReq(lexReq(one(part("lxr", no))), one(part("expectKeyword", one(strLit("is"))))), one(assn(lexReq(one(part("anns", no))), lexReq(one(part("parseAnnotations", one(lexReq(one(part("lxr", no)))))))))))))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), cons(defDec("body", no, no, lexReq(one(part("parseObjectBody", one(lexReq(one(part("lxr", no)))))))), cons(dotReq(lexReq(one(part("lxr", no))), one(part("advance", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("objectConstructor", cons(lexReq(one(part("body", no))), one(lexReq(one(part("anns", no)))))))))))))))), one(methDec(one(part("parse", one(identifierDeclaration("code", no)))), no, no, cons(assn(lexReq(one(part("indentColumn", no))), numLit(0)), cons(defDec("lxr", no, no, lexReq(one(part("lexer", one(lexReq(one(part("code", no)))))))), cons(defDec("body", no, no, lexReq(one(part("parseObjectBody", one(lexReq(one(part("lxr", no)))))))), one(dotReq(lexReq(one(part("ast", no))), one(part("objectConstructor", cons(lexReq(one(part("body", no))), one(dotReq(lexReq(one(part("ast", no))), one(part("nil", no)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), no);
}